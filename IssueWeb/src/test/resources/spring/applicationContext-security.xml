<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

	<beans:bean id="loggerListener"
		class="org.springframework.security.event.authentication.LoggerListener" />

	<!-- 应用程序中启用基于安全的注解 -->
	<global-method-security secured-annotations="enabled"
		jsr250-annotations="enabled" />

	<!-- 安全拦截器  -->
	<http access-denied-page="/commons/403.jsp"
		session-fixation-protection="migrateSession" create-session="always">
		<intercept-url pattern="/commons/**" filters="none" />
		<intercept-url pattern="/css/**" filters="none" />
		<intercept-url pattern="/images/**" filters="none" />
		<intercept-url pattern="/widgets/**" filters="none" />
		<intercept-url pattern="/captcha.png" filters="none" />
		<intercept-url pattern="/" filters="none" />
		<intercept-url pattern="/login.jsp" filters="none" />
		<form-login login-page="/login.jsp"
			authentication-failure-url="/login.jsp?error=true"
			default-target-url="/mainMenu!initMenu.action" always-use-default-target="true"/>
		<logout logout-success-url="/login.jsp" />
		<http-basic />
		<concurrent-session-control exception-if-maximum-exceeded="false"
			 expired-url="/login.jsp" max-sessions="10"/>
	</http>

	<!-- 身份认证管理器-->
	<authentication-provider
		user-service-ref="DaoAuthenticationService">
			<password-encoder hash="md5">
			</password-encoder>
			
			
	</authentication-provider>

	<beans:bean id="DaoAuthenticationService"
		class="com.huateng.framework.security.service.impl.UserDetailsServiceDBTestImpl"/>

	<!-- 访问决策管理器 授权判断配置 -->
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.vote.AffirmativeBased">
		<beans:property name="allowIfAllAbstainDecisions" value="false" />
		<beans:property name="decisionVoters">
			<beans:list>
				<!-- 自定义voter，根据资源判断用户是否有权限访问 -->
				<beans:bean
					class="com.huateng.framework.security.voter.ResourceVoter">
					<!-- 将授权名称的默认前缀由ROLE_改为"". -->
					<beans:property name="rolePrefix" value="" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<authentication-manager alias="authenticationManager"/>
	
	<!-- ServletContext启动和关闭时调用的service -->
	<beans:bean id="securityService"
		class="com.huateng.framework.security.service.impl.SecurityServiceImpl">
		<!-- 向后台取数据的service -->
		<beans:property name="webServiceClientService"
			ref="webServiceClientService">
		</beans:property>
	</beans:bean>
	<beans:bean id="webServiceClientService"
		class="com.huateng.framework.webservice.service.impl.WebServiceClientServiceImpl">
	</beans:bean>

	<!-- 在过滤器FilterSecurityInterceptor之前加入自定义的拦截器 -->
	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.intercept.web.FilterSecurityInterceptor"
		autowire="byType">
		<!-- I18N -->
		<beans:property name="messageSource" ref="messageSource"></beans:property>
		<!-- 访问决策管理器 -->
		<beans:property name="accessDecisionManager"
			ref="accessDecisionManager" />
		<!-- 自定义资源访问拦截器 -->
		<beans:property name="objectDefinitionSource"
			ref="secureResourceFilterInvocationDefinitionSource" />
		<beans:property name="observeOncePerRequest" value="false" />
		<!-- 在这个过滤器的前面执行 -->
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR " />
	</beans:bean>

	<!-- 自定义资源访问拦截器 如果是受保护的url则返回此url-->
	<beans:bean id="secureResourceFilterInvocationDefinitionSource"
		class="com.huateng.framework.security.interceptor.SecureResourceFilterInvocationDefinitionSource" />
	
	<!-- I18N -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- basename属性定义到新目录下 因为放置在jar包中的默认路径中发现没有生效-->
  		<beans:property name="basename" value="/WEB-INF/ssm/messages"/>
  	</beans:bean>
  	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/> 
  	
  	<!-- 登录页面动态验证码的check -->
  	<beans:bean id="codeCheckFilter" class="com.huateng.framework.security.filter.CodeAuthenticationProcessingFilter">
  	  <!-- 把这个过滤器插入到session过滤器之前 -->
      <beans:property name="defaultFilterProcessesUrl" value="/j_spring_security_check"></beans:property>
      <custom-filter before="SESSION_CONTEXT_INTEGRATION_FILTER" />
  </beans:bean>  
</beans:beans>
