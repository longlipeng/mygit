<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
    http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>IssueWeb</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:spring/*.xml</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:config/log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>extremecomponentsPreferencesLocation</param-name>
        <param-value>/config/extremetable.properties</param-value>
    </context-param>
    <context-param>
        <param-name>extremecomponentsMessagesLocation</param-name>
        <param-value>/i18n/messages</param-value>
    </context-param>

    <!-- 设置session失效时间为15分钟 -->
    <session-config>
        <session-timeout>15</session-timeout>
    </session-config>
	
    <!-- 著名 Character Encoding filter -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	 <!-- 用来获取手机证码 -->
    <servlet>
        <servlet-name>verificationCodeForPhone</servlet-name>
        <servlet-class>
            com.huateng.framework.servlet.VerificationCodeServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>verificationCodeForPhone</servlet-name>
        <url-pattern>/verificationCodeForPhone.png</url-pattern>
    </servlet-mapping>
	 <!-- session过滤器 -->
	<filter>
        <filter-name>SessionFilter</filter-name>
        <filter-class>com.huateng.framework.security.filter.SessionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>SessionFilter</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping> 

    <!-- extremetable组件 -->
    <filter>
        <filter-name>eXtremeExport</filter-name>
        <filter-class>
            org.extremecomponents.table.filter.ExportFilter
        </filter-class>
        <init-param>
            <param-name>responseHeadersSetBeforeDoFilter</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>eXtremeExport</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
    <!-- Spring security Filter -->
   <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>
            org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> 
    <!-- 过滤特殊字符 -->
	<filter>  
     	<filter-name>XssSqlFilter</filter-name>  
     	<filter-class>com.huateng.framework.security.filter.IssueCharacterFilter</filter-class>  
     	<init-param> 
   		<param-name>characterParams</param-name> 
   			<param-value>/,&lt;,&gt;,javascript:,script</param-value><!-- 此处加入要过滤的字符或字符串以逗号隔开  -->
  		</init-param> 
	</filter>  
	<filter-mapping>  
     <filter-name>XssSqlFilter</filter-name>  
     <url-pattern>/*</url-pattern>  
	</filter-mapping>


	 <!-- 报表跳过Struts 2 过滤器 -->
	 <!-- <filter>
        <filter-name>BirtFilter</filter-name>
        <filter-class>com.huateng.framework.report.filter.BirtFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>BirtFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
    

    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>
            org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
   

    <listener>
        <listener-class>
            org.springframework.web.context.request.RequestContextListener
        </listener-class>
    </listener>

    <listener>
        <listener-class>
            org.springframework.security.ui.session.HttpSessionEventPublisher
        </listener-class>
    </listener>

    <!--
        <listener>
        <listener-class>
        org.springframework.web.util.Log4jConfigListener
        </listener-class>
        </listener>
    -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <listener>
        <listener-class>
            com.huateng.framework.security.web.ServletContextLoaderListener
        </listener-class>
    </listener>

    <!-- 用来生成验证码图片 -->
    <servlet>
        <servlet-name>captcha</servlet-name>
        <servlet-class>
            com.huateng.framework.servlet.ImageCaptchaServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>captcha</servlet-name>
        <url-pattern>/captcha.png</url-pattern>
    </servlet-mapping>   
    <!-- 用来生成条形码 -->
    <servlet>
        <servlet-name>BarcodeServlet</servlet-name>
        <servlet-class>com.huateng.framework.servlet.BarcodeServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>BarcodeServlet</servlet-name>
        <url-pattern>/barcode.png</url-pattern>
    </servlet-mapping>

 

   
    <!--
        <servlet>
        <servlet-name>initSystemServlet</servlet-name>
        <servlet-class>
        com.huateng.framework.servlet.InitSystemServlet
        </servlet-class>
        <load-on-startup>
        4
        </load-on-startup>
        </servlet>
    -->
    <error-page>
    	<error-code>500</error-code>
    	<location>/error.jsp</location>
    </error-page>
    <error-page>
    	<exception-type>java.io.IOException</exception-type>
    	<location>/error.jsp</location>
    </error-page>
     <error-page>
    	<exception-type>java.lang.NullPointerException</exception-type>
    	<location>/error.jsp</location>
    </error-page>
    <welcome-file-list>
        <welcome-file>login.jsp</welcome-file>
    </welcome-file-list>
 
    
</web-app>
