<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--
		Property Configurer that replaces ${...} placeholders with values from
		properties files
	-->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.ibm.db2.jcc.DB2Driver" />
		<property name="url" value="jdbc:db2://10.19.218.103:60000/SVCDB" />
		<property name="username" value="svc_mng" />
		<property name="password" value="mDFjFFkew" />
		连接池启动时的初始值
		<property name="initialSize" value="1" />
		连接池的最大值
		<property name="maxActive" value="120" />
		最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止
		<property name="maxIdle" value="8" />
		最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
		<property name="minIdle" value="1" />
	</bean> -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="com.ibm.db2.jcc.DB2Driver" />
        <property name="url" value="jdbc:db2://10.19.218.103:60000/SVN_POS" />
        <property name="username" value="svc_mng" />
        <property name="password" value="mDFjFFkew" />
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="1" />
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="120" />
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="8" />
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="1" />
    </bean>
	<!-- Ibatis SessionFactory definition using exposed dataSource -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:config/SqlMapConfig.xml">
		</property>
	</bean>

	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>  <!--  事务传播特性 -->
				<!--  新建事务，如果当前存在事务，把当前事务挂起 -->
				<prop key="getNextValueOfSequence">PROPAGATION_REQUIRES_NEW</prop>
				<prop key="insertOrderFile">PROPAGATION_REQUIRES_NEW</prop>
				<!--支持当前事务，如果当前没有事务，就新建一个事务,如果遇到异常就回滚事务 -->
				<prop key="submit*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="orderListReady">PROPAGATION_REQUIRES_NEW,-Exception
				</prop>
				<prop key="sendBack*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="orderReady*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="cardReady">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="cancel*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="reject*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="downMakeCardFile">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="batch*">PROPAGATION_REQUIRED,-Exception</prop>
				<!-- 以非事务方式执行操作，如果当前存在事务，就把当前事务挂起 -->
				<prop key="inquery*">PROPAGATION_NOT_SUPPORTED</prop>
				<prop key="*">PROPAGATION_NOT_SUPPORTED</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 项目目前不采用这种方法进行aop事务控制 -->

<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="manageServiceOperation"
			expression="execution(* com.huateng.univer.*.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="manageServiceOperation" />
	</aop:config> -->

<bean id="stlDataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="com.ibm.db2.jcc.DB2Driver" />
        <property name="url" value="jdbc:db2://10.19.218.103:60000/SVN_POS" />
        <property name="username" value="svc_stl" />
        <property name="password" value="KSKdasll" />
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="1" />
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="120" />
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="8" />
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="1" />
    </bean>
<!-- STL库数据源配置 --> 
    <!-- <bean id="stlDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">    
        <property name="jndiName" value="jdbc/stldb"></property> -->
<!--        <property name="jndiName" value="java:comp/env/jdbc/stldb"></property>-->
    <!-- </bean> -->
    <bean id="stlSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:config/SqlMapConfig_STL.xml">
        </property>
        <property name="dataSource" ref="stlDataSource"></property>
    </bean>
    <bean id="stlSqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
        <property name="sqlMapClient" ref="stlSqlMapClient"></property>
    </bean>
    <!-- 一条接一条处理模板 -->
    <bean id="oneByOneTemplate" class="com.suning.svc.core.template.OneByOneTemplateImpl">
        <property name="dataSource" ref="stlDataSource" />
    </bean>
    <!-- 为卡交易操作金额配置单独的数据源与事务 -->
    <bean id="cardManagedataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">   
        <property name="driverClassName" value="com.ibm.db2.jcc.DB2Driver" />
        <property name="url" value="jdbc:db2://10.19.218.103:60000/SVN_POS" />
        <property name="username" value="svc_mng" />
        <property name="password" value="mDFjFFkew" />
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="1" />
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="120" />
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="8" />
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="1" />
    </bean>
    
    <bean id="cardManageSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:config/SqlMapConfig.xml">
        </property>
        <property name="dataSource" ref="cardManagedataSource"></property>
    </bean>
    
    <bean id="cardManageSqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
        <property name="sqlMapClient" ref="cardManageSqlMapClient"></property>
    </bean>
    
    <bean id="cardManageTransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="cardManagedataSource" />
    </bean>
    <!-- 事务模板 -->
    <bean id="cardManageTransactionTemplate"
        class="org.springframework.transaction.support.TransactionTemplate">
        <property name="name" value="卡处理事务"></property>
        <property name="transactionManager" ref="cardManageTransactionManager"></property>
    </bean>
</beans>