package com.suning.svc.ibatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SumOrderResultExample {

    /**
     * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    protected String orderByClause;
    /**
     * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    public SumOrderResultExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    protected SumOrderResultExample(SumOrderResultExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS. This class corresponds to the database table TB_SUM_ORDER_RESULT
     * 
     * @abatorgenerated Fri Nov 01 19:22:37 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;
        protected List criteriaWithSingleValue;
        protected List criteriaWithListValue;
        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
                    || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andSumBatchIdIsNull() {
            addCriterion("SUM_BATCH_ID is null");
            return this;
        }

        public Criteria andSumBatchIdIsNotNull() {
            addCriterion("SUM_BATCH_ID is not null");
            return this;
        }

        public Criteria andSumBatchIdEqualTo(Long value) {
            addCriterion("SUM_BATCH_ID =", value, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdNotEqualTo(Long value) {
            addCriterion("SUM_BATCH_ID <>", value, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdGreaterThan(Long value) {
            addCriterion("SUM_BATCH_ID >", value, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_BATCH_ID >=", value, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdLessThan(Long value) {
            addCriterion("SUM_BATCH_ID <", value, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdLessThanOrEqualTo(Long value) {
            addCriterion("SUM_BATCH_ID <=", value, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdIn(List values) {
            addCriterion("SUM_BATCH_ID in", values, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdNotIn(List values) {
            addCriterion("SUM_BATCH_ID not in", values, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdBetween(Long value1, Long value2) {
            addCriterion("SUM_BATCH_ID between", value1, value2, "sumBatchId");
            return this;
        }

        public Criteria andSumBatchIdNotBetween(Long value1, Long value2) {
            addCriterion("SUM_BATCH_ID not between", value1, value2, "sumBatchId");
            return this;
        }

        public Criteria andSerialNoIsNull() {
            addCriterion("SERIAL_NO is null");
            return this;
        }

        public Criteria andSerialNoIsNotNull() {
            addCriterion("SERIAL_NO is not null");
            return this;
        }

        public Criteria andSerialNoEqualTo(String value) {
            addCriterion("SERIAL_NO =", value, "serialNo");
            return this;
        }

        public Criteria andSerialNoNotEqualTo(String value) {
            addCriterion("SERIAL_NO <>", value, "serialNo");
            return this;
        }

        public Criteria andSerialNoGreaterThan(String value) {
            addCriterion("SERIAL_NO >", value, "serialNo");
            return this;
        }

        public Criteria andSerialNoGreaterThanOrEqualTo(String value) {
            addCriterion("SERIAL_NO >=", value, "serialNo");
            return this;
        }

        public Criteria andSerialNoLessThan(String value) {
            addCriterion("SERIAL_NO <", value, "serialNo");
            return this;
        }

        public Criteria andSerialNoLessThanOrEqualTo(String value) {
            addCriterion("SERIAL_NO <=", value, "serialNo");
            return this;
        }

        public Criteria andSerialNoLike(String value) {
            addCriterion("SERIAL_NO like", value, "serialNo");
            return this;
        }

        public Criteria andSerialNoNotLike(String value) {
            addCriterion("SERIAL_NO not like", value, "serialNo");
            return this;
        }

        public Criteria andSerialNoIn(List values) {
            addCriterion("SERIAL_NO in", values, "serialNo");
            return this;
        }

        public Criteria andSerialNoNotIn(List values) {
            addCriterion("SERIAL_NO not in", values, "serialNo");
            return this;
        }

        public Criteria andSerialNoBetween(String value1, String value2) {
            addCriterion("SERIAL_NO between", value1, value2, "serialNo");
            return this;
        }

        public Criteria andSerialNoNotBetween(String value1, String value2) {
            addCriterion("SERIAL_NO not between", value1, value2, "serialNo");
            return this;
        }

        public Criteria andTradeTypeIsNull() {
            addCriterion("TRADE_TYPE is null");
            return this;
        }

        public Criteria andTradeTypeIsNotNull() {
            addCriterion("TRADE_TYPE is not null");
            return this;
        }

        public Criteria andTradeTypeEqualTo(String value) {
            addCriterion("TRADE_TYPE =", value, "tradeType");
            return this;
        }

        public Criteria andTradeTypeNotEqualTo(String value) {
            addCriterion("TRADE_TYPE <>", value, "tradeType");
            return this;
        }

        public Criteria andTradeTypeGreaterThan(String value) {
            addCriterion("TRADE_TYPE >", value, "tradeType");
            return this;
        }

        public Criteria andTradeTypeGreaterThanOrEqualTo(String value) {
            addCriterion("TRADE_TYPE >=", value, "tradeType");
            return this;
        }

        public Criteria andTradeTypeLessThan(String value) {
            addCriterion("TRADE_TYPE <", value, "tradeType");
            return this;
        }

        public Criteria andTradeTypeLessThanOrEqualTo(String value) {
            addCriterion("TRADE_TYPE <=", value, "tradeType");
            return this;
        }

        public Criteria andTradeTypeLike(String value) {
            addCriterion("TRADE_TYPE like", value, "tradeType");
            return this;
        }

        public Criteria andTradeTypeNotLike(String value) {
            addCriterion("TRADE_TYPE not like", value, "tradeType");
            return this;
        }

        public Criteria andTradeTypeIn(List values) {
            addCriterion("TRADE_TYPE in", values, "tradeType");
            return this;
        }

        public Criteria andTradeTypeNotIn(List values) {
            addCriterion("TRADE_TYPE not in", values, "tradeType");
            return this;
        }

        public Criteria andTradeTypeBetween(String value1, String value2) {
            addCriterion("TRADE_TYPE between", value1, value2, "tradeType");
            return this;
        }

        public Criteria andTradeTypeNotBetween(String value1, String value2) {
            addCriterion("TRADE_TYPE not between", value1, value2, "tradeType");
            return this;
        }

        public Criteria andTradeDateIsNull() {
            addCriterion("TRADE_DATE is null");
            return this;
        }

        public Criteria andTradeDateIsNotNull() {
            addCriterion("TRADE_DATE is not null");
            return this;
        }

        public Criteria andTradeDateEqualTo(String value) {
            addCriterion("TRADE_DATE =", value, "tradeDate");
            return this;
        }

        public Criteria andTradeDateNotEqualTo(String value) {
            addCriterion("TRADE_DATE <>", value, "tradeDate");
            return this;
        }

        public Criteria andTradeDateGreaterThan(String value) {
            addCriterion("TRADE_DATE >", value, "tradeDate");
            return this;
        }

        public Criteria andTradeDateGreaterThanOrEqualTo(String value) {
            addCriterion("TRADE_DATE >=", value, "tradeDate");
            return this;
        }

        public Criteria andTradeDateLessThan(String value) {
            addCriterion("TRADE_DATE <", value, "tradeDate");
            return this;
        }

        public Criteria andTradeDateLessThanOrEqualTo(String value) {
            addCriterion("TRADE_DATE <=", value, "tradeDate");
            return this;
        }

        public Criteria andTradeDateLike(String value) {
            addCriterion("TRADE_DATE like", value, "tradeDate");
            return this;
        }

        public Criteria andTradeDateNotLike(String value) {
            addCriterion("TRADE_DATE not like", value, "tradeDate");
            return this;
        }

        public Criteria andTradeDateIn(List values) {
            addCriterion("TRADE_DATE in", values, "tradeDate");
            return this;
        }

        public Criteria andTradeDateNotIn(List values) {
            addCriterion("TRADE_DATE not in", values, "tradeDate");
            return this;
        }

        public Criteria andTradeDateBetween(String value1, String value2) {
            addCriterion("TRADE_DATE between", value1, value2, "tradeDate");
            return this;
        }

        public Criteria andTradeDateNotBetween(String value1, String value2) {
            addCriterion("TRADE_DATE not between", value1, value2, "tradeDate");
            return this;
        }

        public Criteria andCustomerEntityIdIsNull() {
            addCriterion("CUSTOMER_ENTITY_ID is null");
            return this;
        }

        public Criteria andCustomerEntityIdIsNotNull() {
            addCriterion("CUSTOMER_ENTITY_ID is not null");
            return this;
        }

        public Criteria andCustomerEntityIdEqualTo(String value) {
            addCriterion("CUSTOMER_ENTITY_ID =", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdNotEqualTo(String value) {
            addCriterion("CUSTOMER_ENTITY_ID <>", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdGreaterThan(String value) {
            addCriterion("CUSTOMER_ENTITY_ID >", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdGreaterThanOrEqualTo(String value) {
            addCriterion("CUSTOMER_ENTITY_ID >=", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdLessThan(String value) {
            addCriterion("CUSTOMER_ENTITY_ID <", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdLessThanOrEqualTo(String value) {
            addCriterion("CUSTOMER_ENTITY_ID <=", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdLike(String value) {
            addCriterion("CUSTOMER_ENTITY_ID like", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdNotLike(String value) {
            addCriterion("CUSTOMER_ENTITY_ID not like", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdIn(List values) {
            addCriterion("CUSTOMER_ENTITY_ID in", values, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdNotIn(List values) {
            addCriterion("CUSTOMER_ENTITY_ID not in", values, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdBetween(String value1, String value2) {
            addCriterion("CUSTOMER_ENTITY_ID between", value1, value2, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdNotBetween(String value1, String value2) {
            addCriterion("CUSTOMER_ENTITY_ID not between", value1, value2, "customerEntityId");
            return this;
        }

        public Criteria andFatherEntityIdIsNull() {
            addCriterion("FATHER_ENTITY_ID is null");
            return this;
        }

        public Criteria andFatherEntityIdIsNotNull() {
            addCriterion("FATHER_ENTITY_ID is not null");
            return this;
        }

        public Criteria andFatherEntityIdEqualTo(String value) {
            addCriterion("FATHER_ENTITY_ID =", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdNotEqualTo(String value) {
            addCriterion("FATHER_ENTITY_ID <>", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdGreaterThan(String value) {
            addCriterion("FATHER_ENTITY_ID >", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdGreaterThanOrEqualTo(String value) {
            addCriterion("FATHER_ENTITY_ID >=", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdLessThan(String value) {
            addCriterion("FATHER_ENTITY_ID <", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdLessThanOrEqualTo(String value) {
            addCriterion("FATHER_ENTITY_ID <=", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdLike(String value) {
            addCriterion("FATHER_ENTITY_ID like", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdNotLike(String value) {
            addCriterion("FATHER_ENTITY_ID not like", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdIn(List values) {
            addCriterion("FATHER_ENTITY_ID in", values, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdNotIn(List values) {
            addCriterion("FATHER_ENTITY_ID not in", values, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdBetween(String value1, String value2) {
            addCriterion("FATHER_ENTITY_ID between", value1, value2, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdNotBetween(String value1, String value2) {
            addCriterion("FATHER_ENTITY_ID not between", value1, value2, "fatherEntityId");
            return this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("AMOUNT is null");
            return this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("AMOUNT is not null");
            return this;
        }

        public Criteria andAmountEqualTo(Long value) {
            addCriterion("AMOUNT =", value, "amount");
            return this;
        }

        public Criteria andAmountNotEqualTo(Long value) {
            addCriterion("AMOUNT <>", value, "amount");
            return this;
        }

        public Criteria andAmountGreaterThan(Long value) {
            addCriterion("AMOUNT >", value, "amount");
            return this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("AMOUNT >=", value, "amount");
            return this;
        }

        public Criteria andAmountLessThan(Long value) {
            addCriterion("AMOUNT <", value, "amount");
            return this;
        }

        public Criteria andAmountLessThanOrEqualTo(Long value) {
            addCriterion("AMOUNT <=", value, "amount");
            return this;
        }

        public Criteria andAmountIn(List values) {
            addCriterion("AMOUNT in", values, "amount");
            return this;
        }

        public Criteria andAmountNotIn(List values) {
            addCriterion("AMOUNT not in", values, "amount");
            return this;
        }

        public Criteria andAmountBetween(Long value1, Long value2) {
            addCriterion("AMOUNT between", value1, value2, "amount");
            return this;
        }

        public Criteria andAmountNotBetween(Long value1, Long value2) {
            addCriterion("AMOUNT not between", value1, value2, "amount");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS like", value, "status");
            return this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS not like", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("STATUS in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("STATUS not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return this;
        }

        public Criteria andCreatedTimeIsNull() {
            addCriterion("CREATED_TIME is null");
            return this;
        }

        public Criteria andCreatedTimeIsNotNull() {
            addCriterion("CREATED_TIME is not null");
            return this;
        }

        public Criteria andCreatedTimeEqualTo(Date value) {
            addCriterion("CREATED_TIME =", value, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeNotEqualTo(Date value) {
            addCriterion("CREATED_TIME <>", value, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeGreaterThan(Date value) {
            addCriterion("CREATED_TIME >", value, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED_TIME >=", value, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeLessThan(Date value) {
            addCriterion("CREATED_TIME <", value, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATED_TIME <=", value, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeIn(List values) {
            addCriterion("CREATED_TIME in", values, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeNotIn(List values) {
            addCriterion("CREATED_TIME not in", values, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeBetween(Date value1, Date value2) {
            addCriterion("CREATED_TIME between", value1, value2, "createdTime");
            return this;
        }

        public Criteria andCreatedTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATED_TIME not between", value1, value2, "createdTime");
            return this;
        }

        public Criteria andUpdatedTimeIsNull() {
            addCriterion("UPDATED_TIME is null");
            return this;
        }

        public Criteria andUpdatedTimeIsNotNull() {
            addCriterion("UPDATED_TIME is not null");
            return this;
        }

        public Criteria andUpdatedTimeEqualTo(Date value) {
            addCriterion("UPDATED_TIME =", value, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeNotEqualTo(Date value) {
            addCriterion("UPDATED_TIME <>", value, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeGreaterThan(Date value) {
            addCriterion("UPDATED_TIME >", value, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATED_TIME >=", value, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeLessThan(Date value) {
            addCriterion("UPDATED_TIME <", value, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeLessThanOrEqualTo(Date value) {
            addCriterion("UPDATED_TIME <=", value, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeIn(List values) {
            addCriterion("UPDATED_TIME in", values, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeNotIn(List values) {
            addCriterion("UPDATED_TIME not in", values, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeBetween(Date value1, Date value2) {
            addCriterion("UPDATED_TIME between", value1, value2, "updatedTime");
            return this;
        }

        public Criteria andUpdatedTimeNotBetween(Date value1, Date value2) {
            addCriterion("UPDATED_TIME not between", value1, value2, "updatedTime");
            return this;
        }
    }
}