<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ROLE">
	<select id="selectResource" resultClass="com.allinfinance.univer.system.role.dto.ResourceDTO">
			with n(level,RESOURCE_ID , RESOURCE_NAME , RESOURCE_URL ,  RESOURCE_TYPE , RESOURCE_TXN_CODE , FATHER_RESOURCE_ID , FUNCTION_ROLE_ID ,RESOURCE_ORDER)as
			(
			    select 1, RESOURCE_ID ,  RESOURCE_NAME , RESOURCE_URL ,RESOURCE_TYPE ,RESOURCE_TXN_CODE , FATHER_RESOURCE_ID ,FUNCTION_ROLE_ID ,RESOURCE_ORDER
			    from TB_RESOURCE
			    where FATHER_RESOURCE_ID= '0' and DATA_STATE='1' and RESOURCE_TYPE in ('1','2','3') and  function_role_id in ('0','2','3','4')
			    UNION ALL
			    SELECT n.level + 1, nplus1.RESOURCE_ID ,   nplus1.RESOURCE_NAME , nplus1.RESOURCE_URL , nplus1.RESOURCE_TYPE ,  nplus1.RESOURCE_TXN_CODE , nplus1.FATHER_RESOURCE_ID ,  nplus1.FUNCTION_ROLE_ID,nplus1.RESOURCE_ORDER 
			    FROM TB_RESOURCE as nplus1, n 
			    WHERE n.RESOURCE_ID = nplus1.FATHER_RESOURCE_ID and nplus1.DATA_STATE='1' and  nplus1.RESOURCE_TYPE in ('1','2','3') and  nplus1.function_role_id in ('0','2','3','4')
			)
			select RESOURCE_ID as "resourceId",  RESOURCE_NAME as "resourceName",  RESOURCE_URL as "resourceUrl", RESOURCE_TYPE as "resourceType",  RESOURCE_TXN_CODE as "resourceTxnCode", FATHER_RESOURCE_ID as "fatherResourceId", FUNCTION_ROLE_ID as "functionRoleId",  level 
			from n where 1=1
		 <dynamic>
     		<isNotEmpty prepend="and" property="level">
       			 LEVEL &lt; #level:DECIMAL#
      		</isNotEmpty>
      	</dynamic>
			order by LEVEL,RESOURCE_ORDER 
			<!--by youy 0211 for db2 用上面这句代替-->
		<!-- select
			RESOURCE_ID as "resourceId",
			RESOURCE_NAME as "resourceName",
			RESOURCE_URL as "resourceUrl",
			RESOURCE_TYPE as "resourceType",
			RESOURCE_TXN_CODE as "resourceTxnCode",
			FATHER_RESOURCE_ID as "fatherResourceId",
			FUNCTION_ROLE_ID as "functionRoleId",
			LEVEL
		from
			TB_RESOURCE 
		where 
			DATA_STATE='1'
		and 
			RESOURCE_TYPE in (1,2,3)
		and 
			function_role_id in (0,2,3,4)
		 <dynamic>
     		<isNotEmpty prepend="and" property="level">
       			 LEVEL &lt; #level:DECIMAL#
      		</isNotEmpty>
      	</dynamic>
		CONNECT BY PRIOR  
			RESOURCE_ID = FATHER_RESOURCE_ID
     	START WITH 
     		FATHER_RESOURCE_ID= 0
     	order by 
     		LEVEL,RESOURCE_ORDER-->
	</select>
	<select id="selectResourceAll" resultClass="com.allinfinance.univer.system.role.dto.ResourceDTO">
		 with n(level,RESOURCE_ID , RESOURCE_NAME , RESOURCE_URL ,  RESOURCE_TYPE , RESOURCE_TXN_CODE , FATHER_RESOURCE_ID ,RESOURCE_ORDER)as
		(
		    select 1, RESOURCE_ID ,  RESOURCE_NAME , RESOURCE_URL ,RESOURCE_TYPE ,RESOURCE_TXN_CODE , FATHER_RESOURCE_ID ,RESOURCE_ORDER
		    from TB_RESOURCE
		    where FATHER_RESOURCE_ID= '0' and DATA_STATE='1'
		    UNION ALL
		    SELECT n.level + 1, nplus1.RESOURCE_ID ,   nplus1.RESOURCE_NAME , nplus1.RESOURCE_URL , nplus1.RESOURCE_TYPE ,  nplus1.RESOURCE_TXN_CODE , nplus1.FATHER_RESOURCE_ID ,nplus1.RESOURCE_ORDER 
		    FROM TB_RESOURCE as nplus1, n 
		    WHERE n.RESOURCE_ID = nplus1.FATHER_RESOURCE_ID and nplus1.DATA_STATE='1'
		)
		select RESOURCE_ID as "resourceId",  RESOURCE_NAME as "resourceName",  RESOURCE_URL as "resourceUrl", RESOURCE_TYPE as "resourceType",  RESOURCE_TXN_CODE as "resourceTxnCode", FATHER_RESOURCE_ID as "fatherResourceId",  level 
		from n  order by LEVEL,RESOURCE_ORDER 
		<!--by youy 0211 for db2 用上面这句代替-->
		<!--select
			RESOURCE_ID as "resourceId",
			RESOURCE_NAME as "resourceName",
			RESOURCE_URL as "resourceUrl",
			RESOURCE_TYPE as "resourceType",
			RESOURCE_TXN_CODE as "resourceTxnCode",
			FATHER_RESOURCE_ID as "fatherResourceId",
			LEVEL
		from
			TB_RESOURCE 
		where 
			DATA_STATE='1'  
		
		CONNECT BY PRIOR  
			RESOURCE_ID = FATHER_RESOURCE_ID
     	START WITH 
     		FATHER_RESOURCE_ID= 0
     	order by 
     		LEVEL,RESOURCE_ORDER-->
	</select>
	<select id="selectRole" parameterClass="com.allinfinance.univer.system.role.dto.RoleQueryDTO" resultClass="java.util.HashMap" remapResults="true">
    <include refid="Commons.prefixSql"/>
    	select
    		ROLE_ID as "roleId",
    		ROLE_NAME as "roleName",
    		T2.USER_NAME as "userName",
    		T1.ENTITY_ID as "entityId"
    	from
    		TB_ROLE T1 left join TB_ENT_USER T2 on T1.MODIFY_USER=T2.USER_ID
    	where
    		T1.DATA_STATE='1'
    	 <dynamic>
     		<isNotEmpty prepend="and" property="roleId">
       			 T1.ROLE_ID = #roleId:DECIMAL#
      		</isNotEmpty>
      		<isNotEmpty prepend="and" property="roleName">
       			 UPPER(T1.ROLE_NAME) like UPPER('%'||#roleName:VARCHAR#||'%')
      		</isNotEmpty>
      		<isNotEmpty prepend="and" property="entityId">
					T1.ENTITY_ID in(#entityId:VARCHAR#,'00009999')
			</isNotEmpty>
      		<isNotNull prepend="and" property="userId">
      			 T1.ROLE_ID 
      			 not in(
      			 select 
      				ROLE_ID 
      			 FROM 
      				TB_REL_USER_ROLE 
      			 where
      			 	USER_ID=#userId:DECIMAL# 
      			 )
      		</isNotNull>
    	</dynamic>
    <include refid="Commons.suffixSql"/>
  	</select>
  	<select id="selectIssueResource" resultClass="com.allinfinance.univer.system.role.dto.ResourceDTO" parameterClass="com.allinfinance.univer.system.user.dto.UserDTO">
		select distinct
			T1.RESOURCE_ID as "resourceId",
			T1.RESOURCE_NAME as "resourceName",
			T1.RESOURCE_URL as "resourceUrl",
			T1.RESOURCE_TYPE as "resourceType",
			T1.RESOURCE_TXN_CODE as "resourceTxnCode",
			T1.FATHER_RESOURCE_ID as "fatherResourceId",
			T1.FUNCTION_ROLE_ID as "functionRoleId",
			T1.Resource_Order
		from
			TB_RESOURCE T1,TB_REL_ISSUE_RESOURCE T2
		where 
		    T1.RESOURCE_ID=T2.RESOURCE_ID
		and	T1.DATA_STATE='1'
		and 
			T1.RESOURCE_TYPE in ('1','2','3')
		and T2.ISSUE_ID=#entityId:VARCHAR#
		 <isNotEmpty prepend="and" property="isSale">
      		 T2.RANK 	in
      		 <iterate conjunction="," open="(" close=")" property="isSale">
            		#isSale[]#
      		  </iterate>
      </isNotEmpty>
     	order by 
     		T1.resource_id,T1.resource_order,T1.function_role_id
	</select>
	<select id="selectIssueResourceRole" resultClass="com.allinfinance.univer.system.role.dto.ResourceDTO" parameterClass="com.allinfinance.univer.system.user.dto.UserDTO">
		select distinct
			T1.RESOURCE_ID as "resourceId",
			T1.RESOURCE_NAME as "resourceName",
			T1.RESOURCE_URL as "resourceUrl",
			T1.RESOURCE_TYPE as "resourceType",
			T1.RESOURCE_TXN_CODE as "resourceTxnCode",
			T1.FATHER_RESOURCE_ID as "fatherResourceId",
			T1.FUNCTION_ROLE_ID as "functionRoleId",
			T1.Resource_Order
		from
			TB_RESOURCE T1,TB_REL_ISSUE_RESOURCE T2
		where 
		    T1.RESOURCE_ID=T2.RESOURCE_ID
		and	T1.DATA_STATE='1'
		and 
			T1.RESOURCE_TYPE in ('1','2','3')
		and T2.ISSUE_ID=#entityId:VARCHAR#
		 <isNotEmpty prepend="and" property="isSale">
      		 T2.RANK 	in
      		 <iterate conjunction="," open="(" close=")" property="isSale">
            		#isSale[]#
      		  </iterate>
      </isNotEmpty>
     	order by 
       		T1.resource_id,T1.resource_order,T1.function_role_id
	</select>
	
	<select id="selectRoleConsumer" parameterClass="com.allinfinance.univer.system.role.dto.RoleQueryDTO" resultClass="java.util.HashMap" remapResults="true">
    <include refid="Commons.prefixSql"/>
    	select
    		ROLE_ID as "roleId",
    		ROLE_NAME as "roleName",
    		T2.USER_NAME as "userName",
    		T1.ENTITY_ID as "entityId"
    	from
    		TB_ROLE T1 left join TB_ENT_USER T2 on T1.MODIFY_USER=T2.USER_ID
    	where
    		T1.DATA_STATE='1'
    	and 
    	    T1.ROLE_ID NOT IN ('997','994','993')
    	 <dynamic>
     		<isNotEmpty prepend="and" property="roleId">
       			 T1.ROLE_ID = #roleId:DECIMAL#
      		</isNotEmpty>
      		<isNotEmpty prepend="and" property="roleName">
       			 UPPER(T1.ROLE_NAME) like UPPER('%'||#roleName:VARCHAR#||'%')
      		</isNotEmpty>
      		<isNotEmpty prepend="and" property="entityId">
					T1.ENTITY_ID in(#entityId:VARCHAR#,'00009999')
			</isNotEmpty>
      		<isNotNull prepend="and" property="userId">
      			 T1.ROLE_ID 
      			 not in(
      			 select 
      				ROLE_ID 
      			 FROM 
      				TB_REL_USER_ROLE 
      			 where
      			 	USER_ID=#userId:DECIMAL# 
      			 )
      		</isNotNull>
    	</dynamic>
    <include refid="Commons.suffixSql"/>
  	</select>
	<select id="userIssueResourceRole" resultClass="com.allinfinance.univer.system.role.dto.ResourceDTO" parameterClass="com.allinfinance.univer.system.user.dto.UserDTO">
		select distinct
			T1.RESOURCE_ID as "resourceId",
			T1.RESOURCE_NAME as "resourceName",
			T1.RESOURCE_URL as "resourceUrl",
			T1.RESOURCE_TYPE as "resourceType",
			T1.RESOURCE_TXN_CODE as "resourceTxnCode",
			T1.FATHER_RESOURCE_ID as "fatherResourceId",
			T1.FUNCTION_ROLE_ID as "functionRoleId",
			T1.Resource_Order
		from
			TB_RESOURCE T1,TB_REL_ISSUE_RESOURCE T2
		where 
		    T1.RESOURCE_ID=T2.RESOURCE_ID
		and T1.RESOURCE_ID IN (select t1.resource_id  from TB_REL_ROLE_RESOURCE t1,TB_REL_USER_ROLE t2 where t1.role_id=t2.role_id and t2.user_id=#userId:VARCHAR#)
		and	T1.DATA_STATE='1'
		and T2.ISSUE_ID=#entityId:VARCHAR#
		and 
			T1.RESOURCE_TYPE in ('1','2','3')
		<isNotEmpty prepend="and" property="isSale">
      		 T2.RANK 	in
      		 <iterate conjunction="," open="(" close=")" property="isSale">
            		#isSale[]#
      		  </iterate>
      </isNotEmpty>
     	order by 
       		T1.resource_id,T1.resource_order,T1.function_role_id
	</select>
</sqlMap>