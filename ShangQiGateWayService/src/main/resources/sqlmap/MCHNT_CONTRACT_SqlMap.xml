<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="MCHNT_CONTRACT">
  <select id="selectMchntContractDTO" parameterClass="com.allinfinance.univer.consumercontract.dto.ConsumerContractQueryDTO" resultClass="java.util.HashMap" remapResults="true">
    <include refid="Commons.prefixSql"/>
    select
        T1.CONSUMER_CONTRACT_ID as "consumerContractId",
        t2.merchant_code as "merchantCode",
        t2.merchant_name as "merchantName",
        to_char(to_date(T1.CONTRACT_START_DATE,'yyyymmdd'),'yyyy-mm-dd') as "startDate",
        to_char(to_date(decode(T1.CONTRACT_END_DATE,'',null,T1.CONTRACT_END_DATE),'yyyymmdd'),'yyyy-mm-dd') as "endDate",
        T1.rule_no as "ruleNo",
        t3.rule_name as "ruleName",
        T1.CONTRACT_TYPE as "contractType"
    from
        TB_CONSUMER_CONTRACT T1,
        TB_MERCHANT t2,
        TB_SETTLE_PERIOD_RULE t3
    where
        T1.CONTRACT_BUYER=t2.entity_Id
        and T1.rule_no=t3.rule_no
        and T1.CONTRACT_SELLER = #contractSeller:VARCHAR#
        and t2.FATHER_ENTITY_ID = #contractSeller:VARCHAR#
        AND T1.DATA_STATE = '1'
        AND T2.DATA_STATE = '1'
        AND T1.CONTRACT_TYPE = 2
    <dynamic>
      <isNotEmpty prepend="and" property="consumerContractId">
        T1.CONSUMER_CONTRACT_ID = #consumerContractId:VARCHAR#
      </isNotEmpty>
      <isNotEmpty prepend="and" property="merchantCode">
        t2.merchant_code = #merchantCode:VARCHAR#
      </isNotEmpty>
      <isNotEmpty prepend="and" property="ruleNo">
        T1.RULE_NO= #ruleNo:VARCHAR#
      </isNotEmpty>
      <isNotEmpty prepend="and" property="ruleName">
        T3.RULE_NAME= #ruleName:VARCHAR#
      </isNotEmpty>
      <isNotEmpty prepend="and" property="merchantName">
         UPPER(T2.MERCHANT_NAME) like UPPER('%'||#merchantName:VARCHAR#||'%')
      </isNotEmpty>
      <isNotEmpty prepend="and" property="state">
        <isEqual property="state" compareValue="0">
            (T1.CONTRACT_END_DATE is not Null AND T1.CONTRACT_END_DATE &lt; to_char(sysdate,'yyyymmdd'))      
        </isEqual>
        <isEqual property="state" compareValue="1">
        	((T1.CONTRACT_END_DATE &gt;=  to_char(sysdate,'yyyymmdd')
        	OR T1.CONTRACT_END_DATE is NULL) AND T1.CONTRACT_START_DATE &lt;= to_char(sysdate,'yyyymmdd'))      
        </isEqual>
        <isEqual property="state" compareValue="2">
            T1.CONTRACT_START_DATE &gt; to_char(sysdate,'yyyymmdd')    
        </isEqual>
      </isNotEmpty>
    </dynamic>
    <include refid="Commons.suffixSql"/>
  </select>
  
  
  
 <!--  <select id="getbyMchntIdandDate" parameterClass="com.huateng.accor.mchntsettle.dto.MchntSettleDTO" resultClass="com.huateng.accor.ibatis.model.MchntContract">
  	select
  		MERCHANT_CONTRACT_ID as "merchantContractId",
  		MERCHANT_ID as "merchantId",
  		SETT_WAY as "settWay",
  		SETT_PERIOD as "settPeriod",
  		PERIOD_DAY as "periodDay",
  		MINIMUM_SETT_AMOUNT as "minimumSettAmount",
  		MINIMUM_COMMISSION as "minimumCommission",
  		PREVIOUS_SETT_DATE as "previousSettDate",
  		NEXT_SETT_DATE as "nextSettDate",
  		DATA_STATE as "dataState"
  	from
  		TB_ENT_MCHNT_CONTRACT
  	where
  		MERCHANT_ID = #merchantId:DECIMAL# and
  		to_char(#settleEndDate#,'YYYYMMDD') >= to_char(START_DATE,'YYYYMMDD') and 
  		(END_DATE is null or to_char(END_DATE,'YYYYMMDD') >= to_char(#settleEndDate#, 'YYYYMMDD')) and
  		DATA_STATE = 1
  </select>
  
  <select id="getbyMerchantContractId" parameterClass="com.huateng.accor.mchntsettle.dto.MchntSettleDTO" resultClass="com.huateng.accor.ibatis.model.MchntAcctypeContract">
  	select distinct
  		t2.ACC_TYPE_ID as "accTypeId",
  		t2.MERCHANT_CONTRACT_ID as "merchantContractId"
  	from
  		TB_ENT_MCHNT_ACCTYPE_CONTRACT t2, TB_BAT_MCHNT_STAT t1
  	where
  		t2.MERCHANT_CONTRACT_ID = #merchantContractId:DECIMAL# and
  		t2.MERCHANT_ID = t1.MCHNT_ID and
  		to_char(#settleEndDate:DATE#,'YYYYMMDD') >= t1.SETTLE_DATE and
  		t1.ACC_TYPE not in (
  		select a.ACC_TYPE_ID from TB_ENT_MCHNT_ACCTYPE_CONTRACT a
  			where a.MERCHANT_CONTRACT_ID = #merchantContractId:DECIMAL#)
  		and t1.SETTLE_FLAG = 0
  </select>

  <update id="updateMchntContract" parameterClass="com.huateng.accor.ibatis.model.MchntContract" >
    update TB_ENT_MCHNT_CONTRACT
    set
        END_DATE = #endDate#,
        MODIFY_USER = #modifyUser#,
        MODIFY_TIME = #modifyTime#
    where
        MERCHANT_CONTRACT_ID = #merchantContractId:DECIMAL#
  </update>
  
  
  <select id="selectMaxSettleDate"  resultClass="java.util.Date" remapResults="true"    parameterClass="java.lang.String">
   select max(trunc(t.settle_end_date)) from tb_ent_mchnt_settle t
  	  where 
   t.mchnt_settle_state in (1,2,3)
   and
   t.merchant_id=#merchantId# 
  </select>
  
  <select id="selectFeeDet" resultClass="com.huateng.accor.feeRuleManage.dto.FeeDetDTO" parameterClass="com.huateng.accor.feeRuleManage.dto.FeeDetDTO">
  select distinct rule.rule_name as "ruleName",
A.seq as "seq",
A.merchantId as "merchantId",
A.merchantContractId as    "merchantContractId",
A.ruleNo as "ruleNo",
A.productType as "productType",
A.dataState as "dataState",
A.channelDesc as "channelDesc",
A.channel as "channel",
A.productTypeDesc as "productTypeDesc",
B.txnTypeId as "txnTypeId",
B.txnTypeDesc as "txnTypeDesc",
accType.acc_Type_Id as "accTypeId",
entAcctype.acc_type_name as "accTypeName",
accType.acctype_Contract_Id as "acctypeContractId"
from 
(
select    
contract.seq as seq,   
contract.MERCHANT_ID as merchantId,   
contract.MERCHANT_CONTRACT_ID as merchantContractId,   
contract.rule_no as ruleNo,   
contract.PRODUCT_TYPE as productType,   
contract.data_state as dataState,   
decode(contract.channel,'0','全部','1','POS','2','网络') as channelDesc,   
contract.channel as channel,    
nvl(productType.dict_name,'全部') as productTypeDesc,
contract.acctype_contract_id as acctypeContractId   
from tb_fee_det contract left join tb_ent_dict_info  productType on contract.product_type=productType.dict_id 
and productType.dict_type=100 )A,
(select contract.seq as seq,
contract.txn_type_id as txnTypeId,
nvl(txnType.Dict_Name,'全部') as txnTypeDesc
from tb_fee_det contract left join tb_ent_dict_info txnType on contract.txn_type_id=txnType.dict_id
and txnType.dict_type=999
)B ,
tb_ent_fee_rule rule ,tb_ent_mchnt_acctype_contract accType ,tb_ent_acctype  entAcctype
where A.ruleNo=rule.rule_no and  A.seq=B.seq  and A.acctypeContractId=accType.acctype_Contract_Id
and accType.acc_type_id=entAcctype.acc_type_id
  <dynamic>
  	<isNotEmpty prepend="and" property="seq">
  		A.seq=#seq:CHAR#
  	</isNotEmpty>
  	<isNotEmpty prepend="and" property="merchantId">
  		A.merchantId=#merchantId:VARCHAR#
  	</isNotEmpty>
  	<isNotNull prepend="and" property="merchantContractId">
  		A.merchantContractId=#merchantContractId:DECIMAL#
  	</isNotNull>
  	<isNotEmpty prepend="and" property="ruleNo">
  		A.ruleNo=#ruleNo:CHAR#
  	</isNotEmpty>
  	<isNotNull prepend="and" property="productType">
  		A.productType=#productType:DECIMAL#
  	</isNotNull>
  	<isNotNull prepend="and" property="txnTypeId">
  		B.txnTypeId=#txnTypeId:DECIMAL#
  	</isNotNull>
  	<isNotNull prepend="and" property="dataState">
  		A.dataState=#dataState:DECIMAL#
  	</isNotNull>
  	<isNotNull prepend="and" property="channel">
  		A.channel=#channel:DECIMAL#
  	</isNotNull>
  </dynamic>
  </select>
  --> 
</sqlMap>