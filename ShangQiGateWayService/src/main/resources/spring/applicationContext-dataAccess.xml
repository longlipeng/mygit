<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Property Configurer that replaces ${...} placeholders with values from properties files

    <bean id="annotationPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:jdbc.properties</value>
            </list>
        </property>
        
    </bean> -->
<!--    -->
<!--    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
<!--        <property name="driverClassName" value="${connection.driver_class}" />-->
<!--        <property name="url" value="${jdbc.connection.url}" />-->
<!--        <property name="username" value="${jdbc.connection.username}" />-->
<!--        <property name="password" value="${jdbc.connection.password}" />-->
<!--			连接池启动时的初始值 -->
<!--		<property name="initialSize" value="1" />-->
<!--			连接池的最大值 -->
<!--		<property name="maxActive" value="120" />-->
<!--			最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
<!--		<property name="maxIdle" value="8" />-->
<!--			最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
<!--		<property name="minIdle" value="1" />-->
<!--    </bean>-->

		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.ibm.db2.jcc.DB2Driver</value>
		</property>
		<property name="url">
			<value>jdbc:db2://10.250.3.90:60016/svcdb</value>
		</property>
		<property name="username">
			<value>svc_mng</value>
		</property>
		<property name="password">
			<value>svc_mng</value>
		</property>
		<property name="maxActive">
			<value>20</value>
		</property>
		<property name="initialSize">
			<value>1</value>
		</property>  
		<property name="maxWait">
			<value>60000</value>
		</property>  
		<property name="maxIdle">
			<value>20</value>
		</property>  
		<property name="minIdle">
			<value>3</value>
		</property>  
		<property name="removeAbandoned">
			<value>true</value>
		</property>  
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>  
	</bean>
	
	<!-- 为卡交易操作金额配置单独的数据源与事务 -->
	<bean id="cardManagedataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.ibm.db2.jcc.DB2Driver</value>
		</property>
		<property name="url">
			<value>jdbc:db2://10.250.3.90:60016/svcdb</value>
		</property>
		<property name="username">
			<value>svc_mng</value>
		</property>
		<property name="password">
			<value>svc_mng</value>
		</property>
		<property name="maxActive">
			<value>20</value>
		</property>
		<property name="initialSize">
			<value>1</value>
		</property>  
		<property name="maxWait">
			<value>60000</value>
		</property>  
		<property name="maxIdle">
			<value>20</value>
		</property>  
		<property name="minIdle">
			<value>3</value>
		</property>  
		<property name="removeAbandoned">
			<value>true</value>
		</property>  
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>  
	</bean>
	
	<bean id="stlDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.ibm.db2.jcc.DB2Driver</value>
		</property>
		<property name="url">
			<value>jdbc:db2://10.250.3.90:60016/svcdb</value>
		</property>
		<property name="username">
			<value>svc_stl</value>
		</property>
		<property name="password">
			<value>svc_stl</value>
		</property>
		<property name="maxActive">
			<value>20</value>
		</property>
		<property name="initialSize">
			<value>1</value>
		</property>  
		<property name="maxWait">
			<value>60000</value>
		</property>  
		<property name="maxIdle">
			<value>20</value>
		</property>  
		<property name="minIdle">
			<value>3</value>
		</property>  
		<property name="removeAbandoned">
			<value>true</value>
		</property>  
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>  
	</bean>
    
    <!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">    
        <property name="jndiName" value="jdbc/htddb" />
		<property name="jndiName" value="java:comp/env/htddb" />
 	</bean> -->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- STL库数据源配置 --> 
 	<!-- <bean id="stlDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">    
        <property name="jndiName" value="jdbc/stldb" />
        <property name="jndiName" value="java:comp/env/stldb" />
 	</bean> -->
 	<bean id="stlSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:config/SqlMapConfig_STL.xml" />
        <property name="dataSource" ref="stlDataSource" />
    </bean>
    <bean id="stlSqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
        <property name="sqlMapClient" ref="stlSqlMapClient" />
    </bean>
    <!-- 一条接一条处理模板 -->
	<bean id="oneByOneTemplate" class="com.suning.svc.core.template.OneByOneTemplateImpl">
		<property name="dataSource" ref="stlDataSource" />
	</bean>
    
    <!-- Ibatis SessionFactory definition using exposed dataSource -->
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:config/SqlMapConfig.xml"/>
        <property name="dataSource" ref="dataSource" />
    </bean>

	 <bean id="baseTransactionProxy"
     class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
     abstract="true">
       <property name="transactionManager" ref="transactionManager" />
       <property name="transactionAttributes">
        <props>  <!--  事务传播特性 -->
         <!--  新建事务，如果当前存在事务，把当前事务挂起 -->
         <prop key="getNextValueOfSequence">PROPAGATION_REQUIRES_NEW</prop>
         <prop key="insertOrderFile" >PROPAGATION_REQUIRES_NEW</prop>
         <!--支持当前事务，如果当前没有事务，就新建一个事务,如果遇到异常就回滚事务 -->
         <prop key="zhikaForUpdate" >PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="submit*" >PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="orderListReady" >PROPAGATION_REQUIRES_NEW,-Exception</prop>
         <prop key="sendBack*" >PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="orderReady*" >PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="cardReady" >PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="cancel*" >PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="reject*" >PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="insert*" >PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="downMakeCardFile">PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="batch*">PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="sumCp*">PROPAGATION_REQUIRED,-Exception</prop>
         <prop key="*Synch*">PROPAGATION_REQUIRED,-Exception</prop>
         <!-- 以非事务方式执行操作，如果当前存在事务，就把当前事务挂起 -->
         <prop key="inquery*">PROPAGATION_NOT_SUPPORTED</prop>
         <prop key="*">PROPAGATION_NOT_SUPPORTED</prop>
        </props>
       </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 
    <tx:advice id="txAdvice" transaction-manager="transactionManager">	
    	<tx:attributes>
    		<tx:method name="*"/>
    	</tx:attributes>
    </tx:advice>
-->
    <!--   <aop:config>
    	<aop:pointcut id="manageServiceOperation" expression="execution(* com.huateng.univer.*.*.*(..))" />
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="manageServiceOperation"/>
    </aop:config>-->
    
    <!-- 为卡交易操作金额配置单独的数据源与事务 -->
    <!-- <bean id="cardManagedataSource" class="org.springframework.jndi.JndiObjectFactoryBean">    
        <property name="jndiName" value="jdbc/htddb" />
		<property name="jndiName" value="java:comp/env/htddb" />
    </bean> -->
    
    <bean id="cardManageSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:config/SqlMapConfig.xml" />
        <property name="dataSource" ref="cardManagedataSource" />
    </bean>
    
    <bean id="cardManageSqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
        <property name="sqlMapClient" ref="cardManageSqlMapClient" />
    </bean>
    
    <bean id="cardManageTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="cardManagedataSource" />
    </bean>
    <!-- 事务模板 -->
    <bean id="cardManageTransactionTemplate"
        class="org.springframework.transaction.support.TransactionTemplate">
        <property name="name" value="卡处理事务" />
        <property name="transactionManager" ref="cardManageTransactionManager" />
    </bean>
    
</beans>