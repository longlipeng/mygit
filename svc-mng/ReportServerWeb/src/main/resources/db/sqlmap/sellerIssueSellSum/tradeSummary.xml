<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="tradeSummary">
	<select id="tradeSummary"
		resultClass="com.allinfinance.service.sellOperation.tradeSummary.dto.TradeSummaryDTO"
		parameterClass="com.allinfinance.service.sellOperation.tradeSummary.dto.TradeSummaryDTO">


select t4.entity_id as "entityId",
       t4.customer_name as "customerName",
       decode(t2.talCredit, null, 0, t2.talCredit) / 100 as "talCredit",
       decode(t2.creditNum, null, 0, t2.creditNum) as "creditNum",
       decode(talAmt / 100, null, 0, talAmt / 100) as "talAmt",
       decode(talNum, null, 0, talNum) as "talNum",
       decode(t2.talCredit, null, 0, t2.talCredit) / 100 +
       decode(talAmt / 100, null, 0, talAmt / 100) as "tallAmt",
       decode(t2.cardNum, null, 0, t2.cardNum) as "cardNum"
  from tb_customer t4
        left join
        (select t1.process_entity_id as entityId,
               t1.first_entity_id as customerId,
               sum(decode(t1.total_price, null, t2.total_price, t1.total_price)) as talAmt,
               sum(decode(t1.face_value, null, t2.card_amount, t1.card_quantity)) as talNum
          from tb_sell_order t1
               left join
               (select tsol.order_id,
                       sum(tsol.total_price) as total_price,
                       sum(tsol.card_amount) as card_amount
                  from tb_sell_order_list tsol
                 group by tsol.order_id) t2 on t1.order_id = t2.order_id,
                 (select sof.order_id,max(sof.MODIFY_TIME) as payDate from tb_sell_order_flow sof  where sof.ORDER_FLOW_NODE = '14' group by sof.order_id) t6
         where  t1.order_type in
               (10000001, 10000011, 10000002, 10000012, 10000005, 10000006)
           and t6.order_id=t1.order_id
           and t1.payment_state in(2,1)
           and t1.process_entity_id = #issuerId#
           and to_date(substr(t6.payDate, 1, 8), 'yyyyMMdd') &gt;=
               to_date(#startDate#, 'yyyy-MM-dd')
           and to_date(substr(t6.payDate, 1, 8), 'yyyyMMdd') &lt;=
               to_date(#endDate#, 'yyyy-MM-dd')
           group by t1.process_entity_id,t1.first_entity_id) t1 on t1.customerId = t4.entity_id
           left join
           (select t3.process_entity_id as seller_id,
               t3.first_entity_id as customerId,
               sum(t5.credit_amount) as talCredit,
               count(t3.order_id) as creditNum,
               sum(t3.card_quantity) as cardNum
          from tb_sell_order t3, (select order_id,
               sum(credit_amount) as credit_amount
          from tb_sell_order_card_list
         where data_state = 1 group by order_id) t5,
         (select sof.order_id,max(sof.MODIFY_TIME) as payDate from tb_sell_order_flow sof  where sof.ORDER_FLOW_NODE = '14' group by sof.order_id) t7
         where t3.order_id = t5.order_id
           and t3.order_id=t7.order_id
           and t3.order_type = 10000003
           and t3.order_state = 16
           and t3.process_entity_id = #issuerId#
           and to_date(substr(t7.payDate, 1, 8), 'yyyyMMdd') &gt;=
               to_date(#startDate#, 'yyyy-MM-dd')
           and to_date(substr(t7.payDate, 1, 8), 'yyyyMMdd') &lt;=
               to_date(#endDate#, 'yyyy-MM-dd')
          group by t3.process_entity_id, t3.first_entity_id) t2 on t2.customerId = t4.entity_id
 where  t4.father_entity_id = #issuerId#

	</select>
</sqlMap>