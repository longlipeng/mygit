<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="warehouseflow">
	<select id="warehouseflow" resultClass="com.allinfinance.service.sellOperation.warehouseFlow.dto.WarehouseFlowDTO"
		parameterClass="com.allinfinance.service.sellOperation.warehouseFlow.dto.WarehouseFlowDTO">
		
select t.orderId		"orderId", 
       t.orderType		"orderType" ,
       t.orderDate		"orderDate",
       t.productName	"productName",
       t.onymous_stat	"onymousStat",
       t.cardType		"cardType",
       t.faceType		"faceType",
       t.faceValue		"faceValue",
       t.issuerName1	"issuerName1",
       t.issuerName2	"issuerName2",
       t.inNum			"inNum",
       t.outNum			"outNum",
       t.userName		"userName",
       t.stockDate		"stockDate"
	from (
	<!-- 库存调拨：出库 -->
        select distinct t1.order_id as orderId,
                        t4.dict_name as orderType,
                        to_date(t1.order_date, 'yyyyMMdd') as orderDate,
                        t2.product_name as productName,
                        decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡') as onymous_stat,
                        decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡') as cardType,
                        decode(t6.face_value_type,'0','固定','非固定') as faceType,
                        decode(t6.face_value,null,0,to_number(t6.face_value))/100 as faceValue,
                        t3.seller_name as issuerName1,
                        t5.seller_name as issuerName2,
                        0 as inNum,
                        to_number(t6.REAL_AMOUNT) as outNum,
                        t8.user_name as userName,
                        to_date(max(t7.create_time),'yyyyMMddhh24miss') as stockDate
          from tb_sell_order t1
                left join
               tb_sell_order_list t6 on t6.order_id = t1.order_id,
               tb_product t2,
               tb_seller t3,
               tb_dict_info t4,
               (select o.order_id, i.seller_name
                  from tb_sell_order o, tb_seller i
                 where o.process_entity_id = i.entity_id) t5,
               tb_entity_stock_operater t7,
               tb_ent_user t8
         where t1.order_type = t4.dict_code
           and t4.dict_type_code = 205
           and t1.order_id = t7.order_id
           and t6.product_id = t2.product_id
           and t1.first_entity_id = t3.entity_id
           and t7.modify_user = t8.user_id
           and t5.order_id = t1.order_id
           and t7.stock_state in ('1','3')
           and t7.operater_type = '1'
           and t7.order_flow_node in ('21','26')
           and t1.order_state &lt;&gt; '31'
           and t1.order_type = '60000006'
           and t1.first_entity_id = t7.entity_id
           and t6.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
           and t6.DATA_STATE ='1'
           <isNotEmpty prepend="and" property="issuerId">
				  t1.first_entity_id = #issuerId#
           </isNotEmpty> 
           <isNotEmpty prepend="and" property="startDate">
             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &gt;=
                 to_date(#startDate#, 'yyyy-MM-dd')
           </isNotEmpty>
           <isNotEmpty prepend="and" property="endDate">
             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &lt;=
                 to_date(#endDate#, 'yyyy-MM-dd')
           </isNotEmpty> 
         group by t1.order_id,
                  t4.dict_name,
                  to_date(t1.order_date, 'yyyyMMdd'),
                  t2.product_name,
                  decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡'),
                  decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡'),
                  t3.seller_name,
                  t5.seller_name,
                  t6.REAL_AMOUNT,
                  t8.user_name,
                  decode(t6.face_value_type,'0','固定','非固定'),
                  t6.face_value
        union all
           <!-- 库存调拨：入库 -->
                select distinct t1.order_id as orderId,
                        t4.dict_name as orderType,
                        to_date(t1.order_date, 'yyyyMMdd') as orderDate,
                        t2.product_name as productName,
                        decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡') as onymous_stat,
                        decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡') as cardType,
                        decode(t6.face_value_type,'0','固定','非固定') as faceType,
                        decode(t6.face_value,null,0,to_number(t6.face_value))/100 as faceValue,
                        t3.seller_name as issuerName1,
                        t5.seller_name as issuerName2,
                        to_number(t9.cardAmount) as inNum,
                        0 as outNum,
                        t8.user_name as userName,
                        to_date(max(t7.create_time),'yyyyMMddhh24miss') as stockDate
          from tb_sell_order t1
                left join
               tb_sell_order_list t6 on t6.order_id = t1.order_id,
               tb_product t2,
               tb_seller t3,
               tb_dict_info t4,
               (select o.order_id, i.seller_name
                  from tb_sell_order o, tb_seller i
                 where o.process_entity_id = i.entity_id) t5,
               tb_entity_stock_operater t7,
               tb_ent_user t8,
			    (
                SELECT
                b1.order_id,
                count(b2.CARD_NO) as cardAmount,
                b2.PRODUCT_ID
                FROM 
                TB_SELL_ORDER_CARD_LIST b1 inner join 
                TB_ENTITY_STOCK b2 on b1.card_no = b2.card_no
				WHERE
                b1.DATA_STATE = '1'
                and b1.leg_card_no = '1'
                AND b2.DATA_STATE = '1'
                group by b1.order_id,b2.PRODUCT_ID
                )t9
         where t1.order_type = t4.dict_code
           and t4.dict_type_code = 205
           and t1.order_id = t7.order_id
           and t6.product_id = t2.product_id
           and t1.first_entity_id = t3.entity_id
           and t7.modify_user = t8.user_id
           and t5.order_id = t1.order_id
           and t7.stock_state in ('1','3')
           and t7.operater_type = '1'
           and t7.order_flow_node in ('21','26')
           and t1.order_state &lt;&gt; '31'
           and t1.order_type = '60000006'
           and t1.process_entity_id = t7.entity_id
		   and t1.order_id = t9.order_id
           and t6.product_id = t9.product_id
           and t6.DATA_STATE ='1'
           and t6.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
           <isNotEmpty prepend="and" property="issuerId">
				  t1.process_entity_id = #issuerId#
           </isNotEmpty> 
           <isNotEmpty prepend="and" property="startDate">
             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &gt;=
                 to_date(#startDate#, 'yyyy-MM-dd')
           </isNotEmpty>
           <isNotEmpty prepend="and" property="endDate">
             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &lt;=
                 to_date(#endDate#, 'yyyy-MM-dd')
           </isNotEmpty> 
         group by t1.order_id,
                  t4.dict_name,
                  to_date(t1.order_date, 'yyyyMMdd'),
                  t2.product_name,
                  decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡'),
                  decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡'),
                  t3.seller_name,
                  t5.seller_name,
                  t9.cardAmount,
                  t8.user_name,
                  decode(t6.face_value_type,'0','固定','非固定'),
                  t6.face_value
        union all
<!--		select distinct t1.order_id as orderId,-->
<!--                        t4.dict_name as orderType,-->
<!--                        to_date(t1.order_date, 'yyyyMMdd') as orderDate,-->
<!--                        t2.product_name as productName,-->
<!--                        decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡') as onymous_stat,-->
<!--                        decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡') as cardType,-->
<!--                        decode(t6.face_value_type,'0','固定','非固定') as faceType,-->
<!--                        decode(t6.face_value,null,0,to_number(t6.face_value))/100 as faceValue,-->
<!--                        t3.seller_name as issuerName1,-->
<!--                        t5.seller_name as issuerName2,-->
<!--                        0 as inNum,-->
<!--                        to_number(t1.card_quantity) as outNum,-->
<!--                        t8.user_name as userName,-->
<!--                        to_date(max(t7.create_time),'yyyyMMddhh24miss') as stockDate-->
<!--          from tb_sell_order t1-->
<!--                left join-->
<!--               tb_sell_order_list t6 on t6.order_id = t1.order_id,-->
<!--               tb_product t2,-->
<!--               tb_seller t3,-->
<!--               tb_dict_info t4,-->
<!--               (select o.order_id, i.seller_name-->
<!--                  from tb_sell_order o, tb_seller i-->
<!--                 where o.process_entity_id = i.entity_id) t5,-->
<!--               tb_entity_stock_operater t7,-->
<!--               tb_ent_user t8-->
<!--         where t1.order_type = t4.dict_code-->
<!--           and t4.dict_type_code = 205-->
<!--           and t1.order_id = t7.order_id-->
<!--           and t1.product_id = t2.product_id-->
<!--           and t1.first_entity_id = t3.entity_id-->
<!--           and t7.modify_user = t8.user_id-->
<!--           and t7.entity_id = t1.process_entity_id-->
<!--           and t5.order_id = t1.order_id-->
<!--           and t7.stock_state = 3-->
<!--           and t7.operater_type = '1'-->
<!--           and t7.order_flow_node = '29'-->
<!--           and t1.order_state &lt;&gt; '31'-->
<!--           and t1.order_type in ('20000001', '20000002')-->
<!--           <isNotEmpty prepend="and" property="issuerId">-->
<!--				  t1.process_entity_id = #issuerId#-->
<!--           </isNotEmpty>-->
<!--           -->
<!--           <isNotEmpty prepend="and" property="startDate">-->
<!--             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &gt;=-->
<!--                 to_date(#startDate#, 'yyyy-MM-dd')-->
<!--           </isNotEmpty>-->
<!--           <isNotEmpty prepend="and" property="endDate">-->
<!--             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &lt;=-->
<!--                 to_date(#endDate#, 'yyyy-MM-dd')-->
<!--           </isNotEmpty> -->
<!--             -->
<!--         group by t1.order_id,-->
<!--                  t4.dict_name,-->
<!--                  to_date(t1.order_date, 'yyyyMMdd'),-->
<!--                  t2.product_name,-->
<!--                  decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡'),-->
<!--                  decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡'),-->
<!--                  t3.seller_name,-->
<!--                  t5.seller_name,-->
<!--                  t1.card_quantity,-->
<!--                  t8.user_name,-->
<!--                  decode(t6.face_value_type,'0','固定','非固定'),-->
<!--                  t6.face_value-->
<!--		union all-->
<!--         20000001', '20000002','60000001：入库 -->
<!--        select distinct t1.order_id as orderId,-->
<!--                        t4.dict_name as orderType,-->
<!--                        to_date(t1.order_date, 'yyyyMMdd') as orderDate,-->
<!--                        t2.product_name as productName,-->
<!--                        decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡') as onymous_stat,-->
<!--                        decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡') as cardType,-->
<!--                        decode(t6.face_value_type,'0','固定','非固定') as faceType,-->
<!--                        decode(t6.face_value,null,0,to_number(t6.face_value))/100 as faceValue,-->
<!--                        t3.seller_name as issuerName1,-->
<!--                        t5.seller_name as issuerName2,-->
<!--                        to_number(t1.card_quantity) as inNum,-->
<!--                        0 as outNum,-->
<!--                        t8.user_name as userName,-->
<!--                        to_date(max(t7.create_time),'yyyyMMddhh24miss') as stockDate-->
<!--          from tb_sell_order t1-->
<!--                left join-->
<!--               tb_sell_order_list t6 on t6.order_id = t1.order_id,-->
<!--               tb_product t2,-->
<!--               tb_seller t3,-->
<!--               tb_dict_info t4,-->
<!--               (select o.order_id, i.seller_name-->
<!--                  from tb_sell_order o, tb_seller i-->
<!--                 where o.process_entity_id = i.entity_id) t5,-->
<!--               tb_entity_stock_operater t7,-->
<!--               tb_ent_user t8-->
<!--         where t1.order_type = t4.dict_code-->
<!--           and t4.dict_type_code = 205-->
<!--           and t1.order_id = t7.order_id-->
<!--           and t1.product_id = t2.product_id-->
<!--           and t1.first_entity_id = t3.entity_id-->
<!--           and t7.modify_user = t8.user_id-->
<!--           and t7.entity_id = t1.first_entity_id-->
<!--           and t5.order_id = t1.order_id-->
<!--           and t7.stock_state = 1-->
<!--           and t7.operater_type = '1'-->
<!--           and t7.order_flow_node = '26'-->
<!--           and t1.order_state &lt;&gt; '31'-->
<!--           and t1.order_type in ('20000001', '20000002','60000001')-->
<!--           <isNotEmpty prepend="and" property="issuerId">-->
<!--				t1.first_entity_id = #issuerId#-->
<!--           </isNotEmpty>-->
<!--           <isNotEmpty prepend="and" property="startDate">-->
<!--           to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &gt;=-->
<!--                 to_date(#startDate#, 'yyyy-MM-dd')-->
<!--           </isNotEmpty>-->
<!--           <isNotEmpty prepend="and" property="endDate">-->
<!--            to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &lt;=-->
<!--                 to_date(#endDate#, 'yyyy-MM-dd')-->
<!--           </isNotEmpty> -->
<!--         group by t1.order_id,-->
<!--                  t4.dict_name,-->
<!--                  to_date(t1.order_date, 'yyyyMMdd'),-->
<!--                  t2.product_name,-->
<!--                  decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡'),-->
<!--                  decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡'),-->
<!--                  t3.seller_name,-->
<!--                  t5.seller_name,-->
<!--                  t1.card_quantity,-->
<!--                  t8.user_name,-->
<!--                  decode(t6.face_value_type,'0','固定','非固定'),-->
<!--                  t6.face_value-->
<!--        union all-->
        <!-- 采购订单：入库-->
         select distinct t1.order_id as orderId,
                        t4.dict_name as orderType,
                        to_date(t1.order_date, 'yyyyMMdd') as orderDate,
                        t2.product_name as productName,
                        decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡') as onymous_stat,
                        decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡') as cardType,
                        decode(t6.face_value_type,'0','固定','非固定') as faceType,
                        decode(t6.face_value,null,0,to_number(t6.face_value))/100 as faceValue,
                        t3.seller_name as issuerName1,
                        t5.issuer_name as issuerName2,
                        to_number(t9.cardAmount) as inNum,
                        0 as outNum,
                        t8.user_name as userName,
                        to_date(max(t7.create_time),'yyyyMMddhh24miss') as sockDate
          from tb_sell_order t1
               left join
               tb_sell_order_list t6 on t6.order_id = t1.order_id,
               tb_product t2,
               tb_seller t3,
               tb_dict_info t4,
               (select o.order_id, i.issuer_name
                  from tb_sell_order o, tb_issuer i
                 where o.process_entity_id = i.entity_id) t5,
               tb_entity_stock_operater t7,
               tb_ent_user t8,
			   (
                SELECT
                    b1.order_id,
                    count(b2.CARD_NO) as cardAmount,
                    b2.PRODUCT_ID
                FROM 
                    TB_SELL_ORDER_CARD_LIST b1 inner join 
                    TB_ENTITY_STOCK b2 on b1.card_no = b2.card_no
                    WHERE
                    b1.DATA_STATE = '1'
                AND
                    b2.FLD_02_RES_DATA is not null
                AND 
                    b2.DATA_STATE = '1'
                  group by b1.order_id,b2.PRODUCT_ID
				)t9
         where t1.order_type = t4.dict_code
           and t4.dict_type_code = 205
           and t1.order_id = t7.order_id
           and t1.product_id = t2.product_id
           and t1.first_entity_id = t3.entity_id
           and t7.modify_user = t8.user_id
           and t7.entity_id = t1.first_entity_id
           and t5.order_id = t1.order_id
           and t7.stock_state = 1
           and t7.operater_type = '1'
           and t7.order_flow_node = '26'
           and t1.order_state &lt;&gt; '31'
           and t1.order_type in ('30000001', '30000002')
		   and t1.order_id = t9.order_id
		   and t6.DATA_STATE ='1'
		   and t1.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
           <isNotEmpty prepend="and" property="issuerId">
			   t1.first_entity_id = #issuerId#
           </isNotEmpty>
           <isNotEmpty prepend="and" property="startDate">
             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &gt;=
                 to_date(#startDate#, 'yyyy-MM-dd')
           </isNotEmpty>
           <isNotEmpty prepend="and" property="endDate">
             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &lt;=
                 to_date(#endDate#, 'yyyy-MM-dd')
           </isNotEmpty> 
         group by t1.order_id,
                  t4.dict_name,
                  to_date(t1.order_date, 'yyyyMMdd'),
                  t2.product_name,
                  decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡'),
                  decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡'),
                  t3.seller_name,
                  t5.issuer_name,
                  t9.cardAmount,
                  t8.user_name,
                  decode(t6.face_value_type,'0','固定','非固定'),
                  t6.face_value
        union all
        <!-- 销售和换卡订单：出库 -->
        select distinct t1.order_id as orderId,
                        t4.dict_name as orderType,
                        to_date(t1.order_date, 'yyyyMMdd') as orderDate,
                        t2.product_name as productName,
                        decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡') as onymous_stat,
                        decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡') as cardType,
                        decode(t6.face_value_type,'0','固定','非固定') as faceType,
                        decode(t6.face_value,null,0,to_number(t6.face_value))/100 as faceValue,
                        t3.CUSTOMER_NAME as issuerName1,
                        t5.seller_name as issuerName2,
                        0 as inNum,
                        to_number(decode(t6.card_amount,null,t1.card_quantity,t6.card_amount)) as outNum,
                        t8.user_name as userName,
                        to_date(max(t7.create_time),'yyyyMMddhh24miss') as stockDate
          from tb_sell_order t1
               left join
               ( select face_value,face_value_type,order_id,card_amount from  tb_sell_order_list  where data_state='1') t6 on t6.order_id = t1.order_id,
               tb_product t2,
               tb_customer t3,
               tb_dict_info t4,
               (select o.order_id, i.seller_name
                  from tb_sell_order o, tb_seller i
                 where o.process_entity_id = i.entity_id) t5,
               tb_entity_stock_operater t7,
               tb_ent_user t8
         where t1.order_type = t4.dict_code
           and t4.dict_type_code = 205
           and t1.order_id = t7.order_id
           and t1.product_id = t2.product_id
           and t1.first_entity_id = t3.entity_id
           and t7.modify_user = t8.user_id
           and t7.entity_id = t1.process_entity_id
           and t5.order_id = t1.order_id
           and t7.stock_state = 3
           and t7.operater_type = '1'
           and t7.order_flow_node = '29'
           and t1.order_state in ('32','31','36')
           and t1.order_type in ('10000001', '10000002','10000011','10000012','10000005','10000006','60000001')
           and t1.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
           <isNotEmpty prepend="and" property="issuerId">
			    t1.process_entity_id = #issuerId#
           </isNotEmpty>
           <isNotEmpty prepend="and" property="startDate">
             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &gt;=
                 to_date(#startDate#, 'yyyy-MM-dd')
           </isNotEmpty>
           <isNotEmpty prepend="and" property="endDate">
             to_date(substr(t7.create_time, 1, 8), 'yyyyMMdd') &lt;=
                 to_date(#endDate#, 'yyyy-MM-dd')
           </isNotEmpty> 
         group by t1.order_id,
                  t4.dict_name,
                  to_date(t1.order_date, 'yyyyMMdd'),
                  t2.product_name,
                  decode(t2.onymous_stat, 1, '记名个性化卡',2,'不记名','记名库存卡'),
                  decode(t2.CARD_TYPE, '1', 'IC卡', '磁条卡'),
                  t3.CUSTOMER_NAME,
                  t5.seller_name,
                  t6.card_amount,
                  t8.user_name,
                  decode(t6.face_value_type,'0','固定','非固定'),
                  t6.face_value,
                  t1.card_quantity
        union all
        <!-- 赎回订单订单：入库 -->
        select distinct t1.order_id as orderId,
                        t4.dict_name as orderType,
                        to_date(t1.order_date, 'yyyyMMdd') as orderDate,
                        t2.product_name as productName,
                        null as onymous_stat,
                        null as cardType,
                        null as faceType,
                        null as faceValue,
                        t3.CUSTOMER_NAME as issuerName1,
                        t5.seller_name as issuerName2,
                        t6.n as inNum,
                        0 as outNum,
                        t8.user_name as userName,
                        t6.stockDate
          from tb_sell_order t1,
               tb_product t2,
               tb_customer t3,
               tb_dict_info t4,
               (select o.order_id, i.seller_name
                  from tb_sell_order o, tb_seller i
                 where o.process_entity_id = i.entity_id) t5,
               (select t.order_id,t.product_id,count(t.card_no) as n,to_date(t3.modify_time,'yyyyMMddhh24miss') as stockDate,t3.modify_user as userId
                from tb_sell_order_origcard_list t,tb_entity_stock t2,tb_sell_order t3
                where t.card_no=t2.card_no
                     and t.order_id=t3.order_id
                     and t3.order_type='70000001'
                     and t3.order_state='35'
                     and t2.stock_state!=5
                     and t.data_state=1
                     and t.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
                group by t.order_id,t.product_id,to_date(t3.modify_time,'yyyyMMddhh24miss'),t3.modify_user
               ) t6,
               tb_ent_user t8
         where t1.order_type = t4.dict_code
           and t4.dict_type_code = 205
           and t6.product_id = t2.product_id
           and t1.first_entity_id = t3.entity_id
           and t6.order_id = t1.order_id
           and t5.order_id = t1.order_id
           and t6.userId=t8.user_id
           and t1.order_state = '35'
           and t1.order_type = '70000001'
              
           <isNotEmpty prepend="and" property="issuerId">
			    t1.process_entity_id = #issuerId#
           </isNotEmpty>
           <isNotEmpty prepend="and" property="startDate">
             to_date(to_char(t6.stockDate,'yyyy-MM-dd'), 'yyyy-MM-dd') &gt;=
                 to_date(#startDate#, 'yyyy-MM-dd')
           </isNotEmpty>
           <isNotEmpty prepend="and" property="endDate">
             to_date(to_char(t6.stockDate,'yyyy-MM-dd'), 'yyyy-MM-dd') &lt;=
                 to_date(#endDate#, 'yyyy-MM-dd')
           </isNotEmpty>        
                  ) t
 order by stockDate
	</select>
</sqlMap>