<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="seller_sell_detail">
	<select id="seller_sell_detail" resultClass="com.allinfinance.service.issueOperation.sellerSellDetail.dto.SellerSellDetailDTO"
		parameterClass="com.allinfinance.service.issueOperation.sellerSellDetail.dto.SellerSellDetailDTO">
<!--select -->
<!--	t.orderTime      "orderTime",-->
<!--	t.orderId        "orderId",-->
<!--	t.orderType      "orderType",-->
<!--	t.firstName      "firstName",-->
<!--	t.processName    "processName",-->
<!--	t.amount         "amount", -->
<!--	t.productName    "productName",-->
<!--	t.faceType       "faceType",-->
<!--	t.faceValue      "faceValue",-->
<!--	t.cardFee        "cardFee",-->
<!--	t.annualFee      "annualFee",-->
<!--	t.packageFee     "packageFee",-->
<!--	t.deliveryFee    "deliveryFee", -->
<!--	t.addIntionalFee "addIntionalFee", -->
<!--	t.discountFee    "discountFee", -->
<!--	t.al             "al"-->
<!--from (-->
<!--select-->
<!--      to_char(to_date(substr(t.modify_time, 0, 8), 'yyyy-MM-dd'),'yyyy-MM-dd') as orderTime,-->
<!--       t.order_id as orderId,-->
<!--       decode(t.order_type,'30000001','采购记名订单','采购匿名订单') as orderType,-->
<!--       t3.seller_name as firstName,-->
<!--       t4.issuer_name as processName,-->
<!--       decode(t.card_quantity,null,t2.CARD_AMOUNT,t.card_quantity) as amount,-->
<!--       t5.product_name as productName,-->
<!--       decode(decode(t.face_value_type,null,t2.face_value_type,t.face_value_type),1,'非固定','固定') as faceType,-->
<!--       trim(to_char(decode(t.face_value,null,t2.face_value,t.face_value) / 100,'9999999990.99')) as faceValue,-->
<!--       trim(to_char(decode(t.card_issue_fee,null,t2.card_issue_fee,t.card_issue_fee) / 100,'9999999990.99')) as cardFee,-->
<!--       trim(to_char(decode(t.annual_fee,null,0,t.annual_fee) / 100,'9999999990.99')) as annualFee,-->
<!--       trim(to_char(decode(t.package_fee,null,t2.package_fee,t.package_fee) / 100,'9999999990.99')) as packageFee,-->
<!--       trim(to_char(decode(t.delivery_fee,null,0,t.delivery_fee) / 100,'9999999990.99')) as deliveryFee,-->
<!--       trim(to_char(t.additional_fee/100,'9999999990.99')) as addintionalFee,-->
<!--       trim(to_char(t.Discount_Fee/100,'9999999990.99')) as discountFee,-->
<!--       trim(to_char(to_number(t.total_price/100),'9999999990.99')) as al-->
<!--  from tb_sell_order t,tb_sell_order_list t2,tb_seller t3,tb_issuer t4,tb_product t5-->
<!-- where-->
<!--    t.order_id=t2.order_id(+)-->
<!--and t2.data_state(+)=1-->
<!--   and t.order_type in ('30000001','30000002')-->
<!--   and t.order_state = 27-->
<!--   and t.first_entity_id=t3.entity_id-->
<!--   and t.process_entity_id=t4.entity_id-->
<!--   and t.product_id=t5.product_id-->
<!--   and t.first_entity_id=#sellerId#-->
<!--   and t.process_entity_id=#IssuerId#-->
<!--   and to_date(substr(t.modify_time, 0, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')-->
<!--   and to_date(substr(t.modify_time,0,8),'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')-->
<!--union all-->
<!--select-->
<!--  to_char(to_date(substr(t.modify_time, 0, 8), 'yyyy-MM-dd'),'yyyy-MM-dd') as orderTime,-->
<!--  t.order_id as orderId,-->
<!--  '充值订单' as orderType,-->
<!--  t3.CUSTOMER_NAME as firstName,-->
<!--  t4.seller_name as processName,-->
<!--  t.card_quantity as quantity,-->
<!--  t5.product_name as productName,-->
<!--  decode(t.face_value_type,1,'非固定','固定') as faceType,-->
<!--  trim(to_char(max(to_number(t2.credit_amount/100)),'9999999990.99')) as creditAmount,-->
<!--  '','','','',-->
<!--  trim(to_char(t.service_fee,'9999999990.99')) as serviceFee,-->
<!--  '',-->
<!--  trim(to_char(t.total_price/100,'9999999990.99')) as total-->
<!--  from tb_sell_order t,tb_sell_order_card_list t2,tb_customer t3,tb_seller t4,tb_product t5-->
<!-- where-->
<!-- t.order_id=t2.order_id-->
<!-- and t.first_entity_id=t3.entity_id-->
<!-- and t.product_id=t5.product_id-->
<!-- and t.process_entity_id=t4.entity_id-->
<!-- and t.order_type = 10000003-->
<!--   and t.order_state = 16-->
<!--   and t.PROCESS_ENTITY_ID in (select t3.seller_id from tb_seller_credit t3 where t3.issuer_id=#IssuerId# and t3.father_seller_id=#sellerId#)-->
<!--   and to_date(substr(t.modify_time, 0, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')-->
<!--   and to_date(substr(t.modify_time,0,8),'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')-->
<!--group by-->
<!--to_char(to_date(substr(t.modify_time, 0, 8), 'yyyy-MM-dd'),'yyyy-MM-dd'),-->
<!--  t.order_id,-->
<!--  t3.CUSTOMER_NAME,-->
<!--  t4.seller_name,-->
<!--  t.card_quantity,-->
<!--  t5.product_name,-->
<!--  t.face_value_type,-->
<!--  t.service_fee,-->
<!--  t.total_price-->
<!--) t-->
<!---->
<!--order by t.orderId,t.orderTime-->

select 
  orderDate,
  actDate,
  orderId,
  orderType,
  customerId,
  customerName,
  cardQuantity,
  prouctName,
  faceType,
  faceValue/100 as faceValue,
  decode(amount,null,0,amount)/100 as amount,
  decode(cardIssueFee,null,0,cardIssueFee)/100 as cardIssueFee,
  decode(annualFee,null,0,annualFee)/100 as annualFee,
  decode(packageFee,null,0,packageFee)/100 as packageFee,
  decode(deliveryFee,null,0,deliveryFee)/100 as deliveryFee,
  decode(additionalFee,null,0,additionalFee)/100 as additionalFee,
  decode(discountFee,null,0,discountFee)/100 as discountFee,
  decode(totalPrice,null,0,totalPrice)/100 as totalPrice,
  operationTime,
  cardManagementId,
  transType,
  decode(serviceFee,null,0,serviceFee)/100 as serviceFee,
  cardNo
from (
select to_date(t2.order_date, 'yyyyMMdd') as orderDate,
       to_date(substr(t7.modify_time, 1, 8), 'yyyyMMdd') as actDate,
       t2.order_id as orderId,
       t3.dict_name as orderType,
       t2.first_entity_id as customerId,
       t4.customer_name as customerName,
       t2.card_quantity as cardQuantity,
       t5.product_name as prouctName,
       decode(t2.face_value_type, 1, '非固定', null) as faceType,
       t2.face_value as faceValue,
       decode(t2.face_value,
              null,
              t6.amount,
              t2.face_value * t2.card_quantity) as amount,
       t2.card_issue_fee*t2.card_quantity as cardIssueFee,
       t2.annual_fee*t2.card_quantity as annualFee,
       t2.package_fee*1 as packageFee,
       t2.delivery_fee*1 as deliveryFee,
       t2.additional_fee*1 as additionalFee,
       t2.discount_fee*1 as discountFee,
       t2.total_price totalPrice,
       null as operationTime,
       null as cardManagementId,
       null as transType,
       null as serviceFee,
       null as cardNo
  from tb_seller_id t1,
       tb_sell_order t2
       left join
       (select t.order_id,
               sum(decode(t.REAL_AMOUNT, null, 0, t.REAL_AMOUNT) *
                   FACE_VALUE) as amount
          from tb_sell_order_list t
         group by t.order_id) t6 on t2.order_id = t6.order_id,
       tb_dict_info t3,
       tb_customer t4,
       tb_product t5,
         (select t.order_id,t.modify_time
         from tb_sell_order_flow t where t.order_flow_node='18' and t.operate_type=1) t7
 where t2.process_entity_id = t1.seller_id
   and t2.first_entity_id = t4.entity_id
   and t2.order_id=t7.order_id
   and t2.product_id = t5.product_id
   and t2.order_type in ('10000001', '10000002', '10000012', '10000011',
        '10000005', '10000006')
   and t2.order_type = t3.dict_code
   and t2.init_act_stat = '1'
   and t3.dict_type_code = '205'
   and t1.issuer_id=#IssuerId# 
   and to_date(substr(t2.modify_time, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
   and to_date(substr(t2.modify_time, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
union all
select to_date(t2.order_date, 'yyyyMMdd'),
       null,
       t2.order_id,
       t3.dict_name,
       t2.first_entity_id,
       t4.customer_name,
       t2.card_quantity,
       t5.product_name,
       null,
       null,
       t6.amount,
       t2.card_issue_fee*t2.card_quantity,
       t2.annual_fee*t2.card_quantity,
       t2.package_fee*t2.card_quantity,
       t2.delivery_fee*t2.card_quantity,
       t2.service_fee*t6.amount/100,
       t2.discount_fee*t2.card_quantity,
       t2.total_price,
       null,
       null,
       null,
       null,
       null
  from tb_seller_id t1,
       tb_sell_order t2
       left join
       (select t.order_id, sum(t.credit_amount) as amount
          from tb_sell_order_card_list t where t.data_state=1
         group by t.order_id) t6 on t2.order_id = t6.order_id,
       tb_dict_info t3,
       tb_customer t4,
       tb_product t5
 where t2.process_entity_id = t1.seller_id
   and t2.first_entity_id = t4.entity_id
   and t2.product_id = t5.product_id
   and t2.order_type = '10000003'
   and t2.order_type = t3.dict_code
   and t2.order_state = '16'
   and t3.dict_type_code = '205'
   and t1.issuer_id=#IssuerId# 
   and to_date(substr(t2.modify_time, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
   and to_date(substr(t2.modify_time, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
union all
select to_date(t2.order_date, 'yyyyMMdd'),
       null,
       t2.order_id,
       t3.dict_name,
       t2.first_entity_id,
       t4.customer_name,
       t2.card_quantity,
       null,
       null,
       null,
       t6.amount,
       t2.card_issue_fee*t2.card_quantity,
       t2.annual_fee*t2.card_quantity,
       null,
       t2.delivery_fee*t2.card_quantity,
       t2.package_fee+t2.additional_fee,
       0,
       t2.total_price,
       null,
       null,
       null,
       null,
       null
  from tb_seller_id t1,
       tb_sell_order t2,
       tb_dict_info t3,
       tb_customer t4,
       (select t.order_id, sum(t.amount) as amount
          from tb_sell_order_origcard_list t where t.data_state=1
         group by t.order_id) t6
 where t2.process_entity_id = t1.seller_id
   and t2.first_entity_id = t4.entity_id
   and t2.order_id = t6.order_id
   and t2.order_type = '70000001'
   and t2.order_type = t3.dict_code
   and t2.order_state = '35'
   and t3.dict_type_code = '205'
   and t1.issuer_id=#IssuerId# 
   and to_date(substr(t2.modify_time, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
   and to_date(substr(t2.modify_time, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')   
union all
select null,
       null,
       null,
       null,
       null,
       null,
       '1',
       t4.product_name,
       null,
       null,
       to_number(decode(t1.operation_type,
              'S32',
              t1.adjust_amount,
              'S60',
              t1.balance,
              null)),
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       to_date(substr(t1.create_time, 1, 14), 'yyyyMMddhh24miss'),
       t1.card_management_id,
       T5.TRANS_NAME,
       t1.service_fee,
       t1.card_no
  from tb_ent_card_management t1,
       tb_entity_stock        t2,
       tb_seller_id           t3,
       tb_product             t4,
       Tb_Trans_Type          t5
 where t2.entity_id = t3.seller_id
   and t1.card_no = t2.card_no
   and t2.product_id = t4.product_id
   and t1.operation_type = t5.trans_code
   and t1.memo = '00'
   and t3.issuer_id=#IssuerId# 
   and to_date(substr(t1.modify_time, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
   and to_date(substr(t1.modify_time, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
)
</select>
	
	
<select id="seller_sell_detail_issue" resultClass="com.allinfinance.service.issueOperation.sellerSellDetail.dto.SellerSellDetailDTO"
		parameterClass="com.allinfinance.service.issueOperation.sellerSellDetail.dto.SellerSellDetailDTO">
select 
  orderDate,
  actDate,
  orderId,
  orderType,
  customerId,
  customerName,
  cardQuantity,
  prouctName,
  faceType,
  faceValue/100 as faceValue,
  decode(amount,null,0,amount)/100 as amount,
  decode(cardIssueFee,null,0,cardIssueFee)/100 as cardIssueFee,
  decode(annualFee,null,0,annualFee)/100 as annualFee,
  decode(packageFee,null,0,packageFee)/100 as packageFee,
  decode(deliveryFee,null,0,deliveryFee)/100 as deliveryFee,
  decode(additionalFee,null,0,additionalFee)/100 as additionalFee,
  decode(discountFee,null,0,discountFee)/100 as discountFee,
  decode(totalPrice,null,0,totalPrice)/100 as totalPrice,
  operationTime,
  cardManagementId,
  transType,
  decode(serviceFee,null,0,serviceFee)/100 as serviceFee,
  cardNo
from (
select to_date(t2.order_date, 'yyyyMMdd') as orderDate,
       to_date(substr(t7.modify_time, 1, 8), 'yyyyMMdd') as actDate,
       t2.order_id as orderId,
       t3.dict_name as orderType,
       t2.first_entity_id as customerId,
       t4.customer_name as customerName,
       t2.card_quantity as cardQuantity,
       t5.product_name as prouctName,
       decode(t2.face_value_type, 1, '非固定', null) as faceType,
       t2.face_value as faceValue,
       decode(t2.face_value,
              null,
              t6.amount,
              t2.face_value * t2.card_quantity) as amount,
       t2.card_issue_fee* t2.card_quantity as cardIssueFee,
       t2.annual_fee* t2.card_quantity as annualFee,
       t2.package_fee* 1 as packageFee,
       t2.delivery_fee* 1 as deliveryFee,
       t2.additional_fee* 1  as additionalFee,
       t2.discount_fee* 1 as discountFee,
       t2.total_price totalPrice,
       null as operationTime,
       null as cardManagementId,
       null as transType,
       null as serviceFee,
       null as cardNo
  from tb_seller_id t1 left join
       tb_sell_order t2 on  t2.process_entity_id = t1.seller_id
       left join
       (select t.order_id,
               sum(decode(t.REAL_AMOUNT, null, 0, t.REAL_AMOUNT) *
                   FACE_VALUE) as amount
          from tb_sell_order_list t
         group by t.order_id) t6 on t2.order_id = t6.order_id left join
       tb_dict_info t3 on t2.order_type = t3.dict_code left join
       tb_customer t4 on t2.first_entity_id = t4.entity_id left join
       tb_product t5 on t2.product_id = t5.product_id left join
         (select t.order_id,t.modify_time
         from tb_sell_order_flow t where t.order_flow_node='18' and t.operate_type=1) t7 on t2.order_id=t7.order_id left join
         TB_SELL_ORDER_PAYMENT payment on t2.ORDER_ID=payment.ORDER_ID
 where 
  
    payment.DATA_STATE='1'
   and t2.PAYMENT_STATE in ('1','2')
   and t2.order_type in ('10000001', '10000002', '10000012', '10000011',
        '10000005', '10000006')
   and t2.init_act_stat = '1'
   and t3.dict_type_code = '205'
   and t1.issuer_id=#IssuerId# 
   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
   
   
union all
select to_date(t2.order_date, 'yyyyMMdd'),
       null,
       t2.order_id,
       t3.dict_name,
       t2.first_entity_id,
       t4.customer_name,
       t2.card_quantity,
       t5.product_name,
       null,
       null,
       t6.amount,
       t2.card_issue_fee* t2.card_quantity,
       t2.annual_fee* t2.card_quantity,
       t2.package_fee* t2.card_quantity,
       t2.delivery_fee* t2.card_quantity,
       t2.service_fee*t6.amount/100,
       t2.discount_fee* t2.card_quantity,
       t2.total_price,
       null,
       null,
       null,
       null,
       null
  from tb_seller_id t1,
       tb_sell_order t2
       left join
       (select t.order_id, sum(t.credit_amount) as amount
          from tb_sell_order_card_list t where t.data_state=1
         group by t.order_id) t6 on t2.order_id = t6.order_id,
       tb_dict_info t3,
       tb_customer t4,
       tb_product t5,
       TB_SELL_ORDER_PAYMENT payment
 where t2.process_entity_id = t1.seller_id
   and t2.first_entity_id = t4.entity_id
   and t2.product_id = t5.product_id
   and t2.ORDER_ID=payment.ORDER_ID 
   and payment.DATA_STATE='1'
   and t2.PAYMENT_STATE in ('1','2')
   and t2.order_type = '10000003'
   and t2.order_type = t3.dict_code
   and t2.order_state = '16'
   and t3.dict_type_code = '205'
   and t1.issuer_id=#IssuerId# 
   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
union all
select to_date(t2.order_date, 'yyyyMMdd'),
       null,
       t2.order_id,
       t3.dict_name,
       t2.first_entity_id,
       t4.customer_name,
       t2.card_quantity,
       null,
       null,
       null,
       t6.amount,
       t2.card_issue_fee* t2.card_quantity,
       t2.annual_fee* t2.card_quantity,
       null,
       t2.delivery_fee* t2.card_quantity,
       t2.package_fee+t2.additional_fee,
       0,
       t2.total_price,
       null,
       null,
       null,
       null,
       null
  from tb_seller_id t1,
       tb_sell_order t2,
       tb_dict_info t3,
       tb_customer t4,
       (select t.order_id, sum(t.amount) as amount
          from tb_sell_order_origcard_list t where t.data_state=1
         group by t.order_id) t6,TB_SELL_ORDER_PAYMENT payment
 where t2.process_entity_id = t1.seller_id
   and t2.first_entity_id = t4.entity_id
   and t2.order_id = t6.order_id
   and t2.ORDER_ID=payment.ORDER_ID 
   and payment.DATA_STATE='1'
   and t2.PAYMENT_STATE in ('1','2')
   and t2.order_type = '70000001'
   and t2.order_type = t3.dict_code
   and t2.order_state = '35'
   and t3.dict_type_code = '205'
   and t1.issuer_id=#IssuerId# 
   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')   
union all
select null,
       null,
       null,
       null,
       null,
       null,
       '1',
       t4.product_name,
       null,
       null,
       to_number(decode(t1.operation_type,
              'S32',
              t1.adjust_amount,
              'S60',
              t1.balance,
              null)),
       null,
       null,
       null,
       null,
       null,
       null,
       null,
       to_date(substr(t1.create_time, 1, 14), 'yyyyMMddhh24miss'),
       t1.card_management_id,
       T5.TRANS_NAME,
       t1.service_fee,
       t1.card_no
  from tb_ent_card_management t1,
       tb_entity_stock        t2,
       tb_seller_id           t3,
       tb_product             t4,
       Tb_Trans_Type          t5
 where t2.entity_id = t3.seller_id
   and t1.card_no = t2.card_no
   and t2.product_id = t4.product_id
   and t1.operation_type = t5.trans_code
   and t1.memo = '00'
   and t3.issuer_id=#IssuerId# 
   and to_date(substr(t1.modify_time, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
   and to_date(substr(t1.modify_time, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
)

	</select>
	
<select id="seller_sell_detail_sell" resultClass="com.allinfinance.service.issueOperation.sellerSellDetail.dto.SellerSellDetailDTO"
		parameterClass="com.allinfinance.service.issueOperation.sellerSellDetail.dto.SellerSellDetailDTO">
	select 
	  orderDate,
	  actDate,
	  orderId,
	  orderType,
	  customerId,
	  customerName,
	  cardQuantity,
	  prouctName,
	  faceType,
	  faceValue/100 as faceValue,
	  decode(amount,null,0,amount)/100 as amount,
	  decode(cardIssueFee,null,0,cardIssueFee)/100 as cardIssueFee,
	  decode(annualFee,null,0,annualFee)/100 as annualFee,
	  decode(packageFee,null,0,packageFee)/100 as packageFee,
	  decode(deliveryFee,null,0,deliveryFee)/100 as deliveryFee,
	  decode(additionalFee,null,0,additionalFee)/100 as additionalFee,
	  decode(discountFee,null,0,discountFee)/100 as discountFee,
	  decode(totalPrice,null,0,totalPrice)/100 as totalPrice,
	  operationTime,
	  cardManagementId,
	  transType,
	  decode(serviceFee,null,0,serviceFee)/100 as serviceFee,
	  cardNo,
	  sellChannel,
	  termChannel,
	  branchId
	from (
	   select to_date(t2.order_date, 'yyyyMMdd') as orderDate,
	       to_date(substr(t7.modify_time, 1, 8), 'yyyyMMdd') as actDate,
	       t2.order_id as orderId,
	       t3.dict_name as orderType,
	       t2.first_entity_id as customerId,
	       t4.customer_name as customerName,
	       t2.card_quantity as cardQuantity,
	       t5.product_name as prouctName,
	       decode(t2.face_value_type, 1, '非固定', null) as faceType,
	       t2.face_value as faceValue,
	       decode(t2.face_value,
	              null,
	              t6.amount,
	              t2.face_value * t2.card_quantity) as amount,
	       t2.card_issue_fee* t2.card_quantity as cardIssueFee,
	       t2.annual_fee* t2.card_quantity as annualFee,
	       t2.package_fee* 1 as packageFee,
	       t2.delivery_fee* 1 as deliveryFee,
	       t2.additional_fee* 1  as additionalFee,
	       t2.discount_fee* 1 as discountFee,
	       t2.total_price totalPrice,
	       null as operationTime,
	       null as cardManagementId,
	       null as transType,
	       null as serviceFee,
	       null as cardNo,
	       DECODE(t8.CHANNEL,
					null,decode(t2.order_type,'10000001','控制台发卡','10000002','控制台发卡','10000011','控制台发卡','10000012','控制台发卡',''),
					'',decode(t2.order_type,'10000001','控制台发卡','10000002','控制台发卡','10000011','控制台发卡','10000012','控制台发卡',''),
					'70000023','Ipos发卡',t8.CHANNEL)   AS sellChannel,
	       DECODE(trim(T8.TERM_CHANNEL),null,'70000001','','70000001',T8.TERM_CHANNEL)                 AS termChannel,
	       T8.BRANCH_ID                                    AS branchId
	  from tb_seller_id t1 left join
	       tb_sell_order t2 on t2.process_entity_id = t1.seller_id
	       left join (select * from TB_TERM_SELL_ORDER where data_state = '1') T8 on t2.order_id = t8.order_id
	       left join 
	       (select t.order_id,
	               sum(decode(t.REAL_AMOUNT, null, 0, t.REAL_AMOUNT) *
	                   FACE_VALUE) as amount
	          from tb_sell_order_list t
	         group by t.order_id) t6 on t2.order_id = t6.order_id left join
	       tb_dict_info t3 on t2.order_type = t3.dict_code left join
	       tb_customer t4 on t2.first_entity_id = t4.entity_id left join
	       tb_product t5 on t2.product_id = t5.product_id  left join
	         (select t.order_id,t.modify_time
	         from tb_sell_order_flow t where t.order_flow_node='18' and t.operate_type=1) t7 on t2.order_id=t7.order_id left join
	         TB_SELL_ORDER_PAYMENT payment on  t2.ORDER_ID = payment.ORDER_ID
	 where 
	    payment.DATA_STATE='1'
	   and t2.PAYMENT_STATE in ('1','2')
	
	   and t2.order_type in ('10000001', '10000011',
	        '10000005', '10000006')
	   and t3.dict_type_code = '205'
	   and t2.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
	   and t1.seller_id=#sellerId# 
	   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
	   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
	   union all
	select to_date(t2.order_date, 'yyyyMMdd') as orderDate,
	       to_date(substr(t7.modify_time, 1, 8), 'yyyyMMdd') as actDate,
	       t2.order_id as orderId,
	       t3.dict_name as orderType,
	       t2.first_entity_id as customerId,
	       t4.customer_name as customerName,
	       t2.card_quantity as cardQuantity,
	       t5.product_name as prouctName,
	      '固定' as faceType,
	       t6.amount as faceValue,
	       '0' as amount,
	       t2.card_issue_fee*t2.card_quantity as cardIssueFee,
	       t2.annual_fee*t2.card_quantity as annualFee,
	       t2.package_fee*1 as packageFee,
	       '0' as deliveryFee,
	       t2.additional_fee*1 as additionalFee,
	       t2.discount_fee*1 as discountFee,
	       t2.total_price totalPrice,
	       null as operationTime,
	       null as cardManagementId,
	       null as transType,
	       null as serviceFee,
	       null as cardNo,
	       DECODE(t8.CHANNEL,
					null,decode(t2.order_type,'10000001','控制台发卡','10000002','控制台发卡','10000011','控制台发卡','10000012','控制台发卡',''),
					'',decode(t2.order_type,'10000001','控制台发卡','10000002','控制台发卡','10000011','控制台发卡','10000012','控制台发卡',''),
					'70000023','Ipos发卡',t8.CHANNEL)   AS sellChannel,
	       DECODE(trim(T8.TERM_CHANNEL),null,'70000001','','70000001',T8.TERM_CHANNEL)                 AS termChannel,
	       T8.BRANCH_ID                                    AS branchId
	  from tb_seller_id t1 left join
	       tb_sell_order t2 on t2.process_entity_id = t1.seller_id
	       left join (select * from TB_TERM_SELL_ORDER where data_state = '1') T8 on t2.order_id = t8.order_id
	       left join
	       (select t.order_id,
	               sum(decode(t.REAL_AMOUNT, null, 0, t.REAL_AMOUNT) *
	                   FACE_VALUE) as amount
	          from tb_sell_order_list t
	         group by t.order_id) t6 on t2.order_id = t6.order_id left join
	       tb_dict_info t3 on t2.order_type = t3.dict_code left join
	       tb_customer t4 on t2.first_entity_id = t4.entity_id left join
	       tb_product t5 on t2.product_id = t5.product_id left join
	       (select t.order_id,t.modify_time
	        from tb_sell_order_flow t where t.order_flow_node='18' and t.operate_type=1) t7  on t2.order_id=t7.order_id left join
	        TB_SELL_ORDER_PAYMENT payment on t2.ORDER_ID=payment.ORDER_ID
	 where 
	       payment.DATA_STATE='1'
	   and t2.PAYMENT_STATE in('1', '2')
	   and t2.order_type in ( '10000002', '10000012')
	   and t3.dict_type_code = '205'
	   and t1.seller_id=#sellerId# 
	   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
	   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
	   and t2.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
	union all
	select to_date(t2.order_date, 'yyyyMMdd'),
	       null,
	       t2.order_id,
	       t3.dict_name,
	       t2.first_entity_id,
	       t4.customer_name,
	       t2.card_quantity,
	       t5.product_name,
	       null,
	       null,
	       t6.amount,
	       t2.card_issue_fee* t2.card_quantity,
	       t2.annual_fee* t2.card_quantity,
	       t2.package_fee* t2.card_quantity,
	       t2.delivery_fee* t2.card_quantity,
	       t2.service_fee*t6.amount/100,
	       t2.discount_fee* t2.card_quantity,
	       t2.total_price,
	       null,
	       null,
	       null,
	       null,
	       null,
	       DECODE(t8.CHANNEL,
					null,decode(t2.order_type,'10000001','控制台发卡','10000002','控制台发卡','10000011','控制台发卡','10000012','控制台发卡',''),
					'',decode(t2.order_type,'10000001','控制台发卡','10000002','控制台发卡','10000011','控制台发卡','10000012','控制台发卡',''),
					'70000023','Ipos发卡',t8.CHANNEL)   AS sellChannel,
	       DECODE(trim(T8.TERM_CHANNEL),null,'70000001','','70000001',T8.TERM_CHANNEL)                 AS termChannel,
	       T8.BRANCH_ID                                    AS branchId
	  from tb_seller_id t1,
	       tb_sell_order t2
	       left join (select * from TB_TERM_SELL_ORDER where data_state = '1') T8 on t2.order_id = t8.order_id
	       left join
	       (select t.order_id, sum(t.credit_amount) as amount
	          from tb_sell_order_card_list t where t.data_state=1
	         group by t.order_id) t6 on t2.order_id = t6.order_id,
	       tb_dict_info t3,
	       tb_customer t4,
	       tb_product t5,
	       TB_SELL_ORDER_PAYMENT payment
	 where t2.process_entity_id = t1.seller_id
	   and t2.first_entity_id = t4.entity_id
	   and t2.product_id = t5.product_id
	   and payment.ORDER_ID = t2.ORDER_ID
	   and payment.DATA_STATE='1'
	   and t2.PAYMENT_STATE in ('1','2')
	   and t2.order_type = '10000003'
	   and t2.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
	   and t2.order_type = t3.dict_code
	   and t2.order_state = '16'
	   and t3.dict_type_code = '205'
	   and t1.seller_id=#sellerId# 
	   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
	   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
	union all
	select to_date(t2.order_date, 'yyyyMMdd'),
	       null,
	       t2.order_id,
	       t3.dict_name,
	       t2.first_entity_id,
	       t4.customer_name,
	       t2.card_quantity,
	       null,
	       null,
	       null,
	       t6.amount,
	       t2.card_issue_fee* t2.card_quantity,
	       t2.annual_fee* t2.card_quantity,
	       null,
	       t2.delivery_fee* t2.card_quantity,
	       t2.package_fee+t2.additional_fee,
	       0,
	       t2.total_price,
	       null,
	       null,
	       null,
	       null,
	       null,
	       DECODE(t8.CHANNEL,
					null,decode(t2.order_type,'10000001','控制台发卡','10000002','控制台发卡','10000011','控制台发卡','10000012','控制台发卡',''),
					'',decode(t2.order_type,'10000001','控制台发卡','10000002','控制台发卡','10000011','控制台发卡','10000012','控制台发卡',''),
					'70000023','Ipos发卡',t8.CHANNEL)   AS sellChannel,
	       DECODE(trim(T8.TERM_CHANNEL),null,'70000001','','70000001',T8.TERM_CHANNEL)                 AS termChannel,
	       T8.BRANCH_ID                                    AS branchId
	  from tb_seller_id t1,
	       tb_sell_order t2
	       left join (select * from TB_TERM_SELL_ORDER where data_state = '1') T8 on t2.order_id = t8.order_id,
	       tb_dict_info t3,
	       tb_customer t4,
	       (select t.order_id, sum(t.amount) as amount
	          from tb_sell_order_origcard_list t where t.data_state=1 and t.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
	         group by t.order_id) t6,TB_SELL_ORDER_PAYMENT payment
	 where t2.process_entity_id = t1.seller_id
	   and t2.first_entity_id = t4.entity_id
	   and t2.order_id = t6.order_id
	   and payment.ORDER_ID = t2.ORDER_ID
	   and payment.DATA_STATE='1'
	   and t2.PAYMENT_STATE in ('1','2')
	   and t6.amount is not null
	   and t2.order_type = '70000001'
	   and t2.order_type = t3.dict_code
	   and t2.order_state = '35'
	   and t3.dict_type_code = '205'
	   and t1.seller_id=#sellerId# 
	   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
	   and to_date(substr(payment.CREATE_TIME, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')   
	union all
	select null,
	       null,
	       null,
	       null,
	       null,
	       null,
	       '1',
	       t4.product_name,
	       null,
	       null,
	       to_number(decode(t1.operation_type,
	              'S32',
	              t1.adjust_amount,
	              'S60',
	              t1.balance,
	              null)),
	       null,
	       null,
	       null,
	       null,
	       null,
	       null,
	       null,
	       to_date(substr(t1.create_time, 1, 14), 'yyyyMMddhh24miss'),
	       t1.card_management_id,
	       T5.TRANS_NAME,
	       t1.service_fee,
	       t1.card_no,
	       null,
	       null,
	       null
	  from tb_ent_card_management t1,
	       tb_entity_stock        t2,
	       tb_seller_id           t3,
	       tb_product             t4,
	       Tb_Trans_Type          t5
	 where t2.entity_id = t3.seller_id
	   and t1.card_no = t2.card_no
	   and t2.product_id = t4.product_id
	   and t1.operation_type = t5.trans_code
	   and t1.memo = '00'
	   and t2.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
	   and t3.seller_id=#sellerId# 
	   and to_date(substr(t1.modify_time, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
	   and to_date(substr(t1.modify_time, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
	     union all
	   SELECT
	            NULL,
	            NULL,
	            NULL,
	            NULL,
	            NULL,
	            NULL,
	            '1',
	            t4.product_name,
	            NULL,
	            NULL,
	            to_number(t1.recharge_amt),
	            NULL,
	            NULL,
	            NULL,
	            NULL,
	            NULL,
	            NULL,
	            NULL,
	            to_date(SUBSTR(t1.update_time, 1, 14), 'yyyyMMddhh24miss'),
	            t1.recharge_batch_no as card_management_id ,
	            decode(RECHARGE_TYPE,'00','批量充值','01','首充','03','不记名卡充值') as TRANS_NAME,
	            t1.recharge_fee as service_fee,
	            t1.recharge_card_no as card_no,
	            null,
	            null,
	            null
	        FROM
	            tbl_recharge_batch_detail t1,           
	            tb_entity_stock t2,
	            tb_seller_id t3,
	            tb_product t4
	        WHERE
	            t2.entity_id = t3.seller_id
	        AND t1.recharge_card_no = t2.card_no
	         AND t1.RECHARGE_TYPE!='02'
	        AND t2.product_id = t4.product_id
	        AND t2.product_id not in (select product_id from tb_product_for_report where PRODUCT_TYPE='0')
	        AND t3.seller_id=#sellerId#
	          AND to_date(SUBSTR(t1.update_time, 1, 8), 'yyyyMMdd')&gt;=to_date(#startDate#,'yyyy-MM-dd')
	        AND to_date(SUBSTR(t1.update_time, 1, 8), 'yyyyMMdd')&lt;=to_date(#endDate#,'yyyy-MM-dd')
	        
	)
	</select>
</sqlMap>