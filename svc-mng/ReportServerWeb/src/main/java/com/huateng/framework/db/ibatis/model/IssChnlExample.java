package com.huateng.framework.db.ibatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IssChnlExample {
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	public IssChnlExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	protected IssChnlExample(IssChnlExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table TB_ISS_CHNL
	 * 
	 * @abatorgenerated Mon Feb 20 09:43:01 CST 2012
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;

		protected List<Map<String, Object>> criteriaWithSingleValue;

		protected List<Map<String, Object>> criteriaWithListValue;

		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIssChnlIsNull() {
			addCriterion("ISS_CHNL is null");
			return this;
		}

		public Criteria andIssChnlIsNotNull() {
			addCriterion("ISS_CHNL is not null");
			return this;
		}

		public Criteria andIssChnlEqualTo(String value) {
			addCriterion("ISS_CHNL =", value, "issChnl");
			return this;
		}

		public Criteria andIssChnlNotEqualTo(String value) {
			addCriterion("ISS_CHNL <>", value, "issChnl");
			return this;
		}

		public Criteria andIssChnlGreaterThan(String value) {
			addCriterion("ISS_CHNL >", value, "issChnl");
			return this;
		}

		public Criteria andIssChnlGreaterThanOrEqualTo(String value) {
			addCriterion("ISS_CHNL >=", value, "issChnl");
			return this;
		}

		public Criteria andIssChnlLessThan(String value) {
			addCriterion("ISS_CHNL <", value, "issChnl");
			return this;
		}

		public Criteria andIssChnlLessThanOrEqualTo(String value) {
			addCriterion("ISS_CHNL <=", value, "issChnl");
			return this;
		}

		public Criteria andIssChnlLike(String value) {
			addCriterion("ISS_CHNL like", value, "issChnl");
			return this;
		}

		public Criteria andIssChnlNotLike(String value) {
			addCriterion("ISS_CHNL not like", value, "issChnl");
			return this;
		}

		public Criteria andIssChnlIn(List<String> values) {
			addCriterion("ISS_CHNL in", values, "issChnl");
			return this;
		}

		public Criteria andIssChnlNotIn(List<String> values) {
			addCriterion("ISS_CHNL not in", values, "issChnl");
			return this;
		}

		public Criteria andIssChnlBetween(String value1, String value2) {
			addCriterion("ISS_CHNL between", value1, value2, "issChnl");
			return this;
		}

		public Criteria andIssChnlNotBetween(String value1, String value2) {
			addCriterion("ISS_CHNL not between", value1, value2, "issChnl");
			return this;
		}

		public Criteria andRcvInsIdCdIsNull() {
			addCriterion("RCV_INS_ID_CD is null");
			return this;
		}

		public Criteria andRcvInsIdCdIsNotNull() {
			addCriterion("RCV_INS_ID_CD is not null");
			return this;
		}

		public Criteria andRcvInsIdCdEqualTo(String value) {
			addCriterion("RCV_INS_ID_CD =", value, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdNotEqualTo(String value) {
			addCriterion("RCV_INS_ID_CD <>", value, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdGreaterThan(String value) {
			addCriterion("RCV_INS_ID_CD >", value, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdGreaterThanOrEqualTo(String value) {
			addCriterion("RCV_INS_ID_CD >=", value, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdLessThan(String value) {
			addCriterion("RCV_INS_ID_CD <", value, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdLessThanOrEqualTo(String value) {
			addCriterion("RCV_INS_ID_CD <=", value, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdLike(String value) {
			addCriterion("RCV_INS_ID_CD like", value, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdNotLike(String value) {
			addCriterion("RCV_INS_ID_CD not like", value, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdIn(List<String> values) {
			addCriterion("RCV_INS_ID_CD in", values, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdNotIn(List<String> values) {
			addCriterion("RCV_INS_ID_CD not in", values, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdBetween(String value1, String value2) {
			addCriterion("RCV_INS_ID_CD between", value1, value2, "rcvInsIdCd");
			return this;
		}

		public Criteria andRcvInsIdCdNotBetween(String value1, String value2) {
			addCriterion("RCV_INS_ID_CD not between", value1, value2,
					"rcvInsIdCd");
			return this;
		}

		public Criteria andRsvDataIsNull() {
			addCriterion("RSV_DATA is null");
			return this;
		}

		public Criteria andRsvDataIsNotNull() {
			addCriterion("RSV_DATA is not null");
			return this;
		}

		public Criteria andRsvDataEqualTo(String value) {
			addCriterion("RSV_DATA =", value, "rsvData");
			return this;
		}

		public Criteria andRsvDataNotEqualTo(String value) {
			addCriterion("RSV_DATA <>", value, "rsvData");
			return this;
		}

		public Criteria andRsvDataGreaterThan(String value) {
			addCriterion("RSV_DATA >", value, "rsvData");
			return this;
		}

		public Criteria andRsvDataGreaterThanOrEqualTo(String value) {
			addCriterion("RSV_DATA >=", value, "rsvData");
			return this;
		}

		public Criteria andRsvDataLessThan(String value) {
			addCriterion("RSV_DATA <", value, "rsvData");
			return this;
		}

		public Criteria andRsvDataLessThanOrEqualTo(String value) {
			addCriterion("RSV_DATA <=", value, "rsvData");
			return this;
		}

		public Criteria andRsvDataLike(String value) {
			addCriterion("RSV_DATA like", value, "rsvData");
			return this;
		}

		public Criteria andRsvDataNotLike(String value) {
			addCriterion("RSV_DATA not like", value, "rsvData");
			return this;
		}

		public Criteria andRsvDataIn(List<String> values) {
			addCriterion("RSV_DATA in", values, "rsvData");
			return this;
		}

		public Criteria andRsvDataNotIn(List<String> values) {
			addCriterion("RSV_DATA not in", values, "rsvData");
			return this;
		}

		public Criteria andRsvDataBetween(String value1, String value2) {
			addCriterion("RSV_DATA between", value1, value2, "rsvData");
			return this;
		}

		public Criteria andRsvDataNotBetween(String value1, String value2) {
			addCriterion("RSV_DATA not between", value1, value2, "rsvData");
			return this;
		}

		public Criteria andRecUpdUserIdIsNull() {
			addCriterion("REC_UPD_USER_ID is null");
			return this;
		}

		public Criteria andRecUpdUserIdIsNotNull() {
			addCriterion("REC_UPD_USER_ID is not null");
			return this;
		}

		public Criteria andRecUpdUserIdEqualTo(String value) {
			addCriterion("REC_UPD_USER_ID =", value, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdNotEqualTo(String value) {
			addCriterion("REC_UPD_USER_ID <>", value, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdGreaterThan(String value) {
			addCriterion("REC_UPD_USER_ID >", value, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("REC_UPD_USER_ID >=", value, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdLessThan(String value) {
			addCriterion("REC_UPD_USER_ID <", value, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdLessThanOrEqualTo(String value) {
			addCriterion("REC_UPD_USER_ID <=", value, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdLike(String value) {
			addCriterion("REC_UPD_USER_ID like", value, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdNotLike(String value) {
			addCriterion("REC_UPD_USER_ID not like", value, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdIn(List<String> values) {
			addCriterion("REC_UPD_USER_ID in", values, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdNotIn(List<String> values) {
			addCriterion("REC_UPD_USER_ID not in", values, "recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdBetween(String value1, String value2) {
			addCriterion("REC_UPD_USER_ID between", value1, value2,
					"recUpdUserId");
			return this;
		}

		public Criteria andRecUpdUserIdNotBetween(String value1, String value2) {
			addCriterion("REC_UPD_USER_ID not between", value1, value2,
					"recUpdUserId");
			return this;
		}

		public Criteria andRecUpdTsIsNull() {
			addCriterion("REC_UPD_TS is null");
			return this;
		}

		public Criteria andRecUpdTsIsNotNull() {
			addCriterion("REC_UPD_TS is not null");
			return this;
		}

		public Criteria andRecUpdTsEqualTo(Date value) {
			addCriterionForJDBCDate("REC_UPD_TS =", value, "recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsNotEqualTo(Date value) {
			addCriterionForJDBCDate("REC_UPD_TS <>", value, "recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsGreaterThan(Date value) {
			addCriterionForJDBCDate("REC_UPD_TS >", value, "recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("REC_UPD_TS >=", value, "recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsLessThan(Date value) {
			addCriterionForJDBCDate("REC_UPD_TS <", value, "recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("REC_UPD_TS <=", value, "recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsIn(List<Date> values) {
			addCriterionForJDBCDate("REC_UPD_TS in", values, "recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsNotIn(List<Date> values) {
			addCriterionForJDBCDate("REC_UPD_TS not in", values, "recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("REC_UPD_TS between", value1, value2,
					"recUpdTs");
			return this;
		}

		public Criteria andRecUpdTsNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("REC_UPD_TS not between", value1, value2,
					"recUpdTs");
			return this;
		}

		public Criteria andRecCrtTsIsNull() {
			addCriterion("REC_CRT_TS is null");
			return this;
		}

		public Criteria andRecCrtTsIsNotNull() {
			addCriterion("REC_CRT_TS is not null");
			return this;
		}

		public Criteria andRecCrtTsEqualTo(Date value) {
			addCriterionForJDBCDate("REC_CRT_TS =", value, "recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsNotEqualTo(Date value) {
			addCriterionForJDBCDate("REC_CRT_TS <>", value, "recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsGreaterThan(Date value) {
			addCriterionForJDBCDate("REC_CRT_TS >", value, "recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("REC_CRT_TS >=", value, "recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsLessThan(Date value) {
			addCriterionForJDBCDate("REC_CRT_TS <", value, "recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("REC_CRT_TS <=", value, "recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsIn(List<Date> values) {
			addCriterionForJDBCDate("REC_CRT_TS in", values, "recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsNotIn(List<Date> values) {
			addCriterionForJDBCDate("REC_CRT_TS not in", values, "recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("REC_CRT_TS between", value1, value2,
					"recCrtTs");
			return this;
		}

		public Criteria andRecCrtTsNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("REC_CRT_TS not between", value1, value2,
					"recCrtTs");
			return this;
		}
	}
}