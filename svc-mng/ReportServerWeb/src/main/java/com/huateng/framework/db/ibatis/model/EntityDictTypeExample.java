package com.huateng.framework.db.ibatis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EntityDictTypeExample {
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	public EntityDictTypeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	protected EntityDictTypeExample(EntityDictTypeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table TB_ENTITY_DICT_TYPE
	 * 
	 * @abatorgenerated Sun Sep 26 15:55:42 CST 2010
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;

		protected List<Map<String, Object>> criteriaWithSingleValue;

		protected List<Map<String, Object>> criteriaWithListValue;

		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andDictTypeCodeIsNull() {
			addCriterion("DICT_TYPE_CODE is null");
			return this;
		}

		public Criteria andDictTypeCodeIsNotNull() {
			addCriterion("DICT_TYPE_CODE is not null");
			return this;
		}

		public Criteria andDictTypeCodeEqualTo(String value) {
			addCriterion("DICT_TYPE_CODE =", value, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeNotEqualTo(String value) {
			addCriterion("DICT_TYPE_CODE <>", value, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeGreaterThan(String value) {
			addCriterion("DICT_TYPE_CODE >", value, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeGreaterThanOrEqualTo(String value) {
			addCriterion("DICT_TYPE_CODE >=", value, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeLessThan(String value) {
			addCriterion("DICT_TYPE_CODE <", value, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeLessThanOrEqualTo(String value) {
			addCriterion("DICT_TYPE_CODE <=", value, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeLike(String value) {
			addCriterion("DICT_TYPE_CODE like", value, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeNotLike(String value) {
			addCriterion("DICT_TYPE_CODE not like", value, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeIn(List<String> values) {
			addCriterion("DICT_TYPE_CODE in", values, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeNotIn(List<String> values) {
			addCriterion("DICT_TYPE_CODE not in", values, "dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeBetween(String value1, String value2) {
			addCriterion("DICT_TYPE_CODE between", value1, value2,
					"dictTypeCode");
			return this;
		}

		public Criteria andDictTypeCodeNotBetween(String value1, String value2) {
			addCriterion("DICT_TYPE_CODE not between", value1, value2,
					"dictTypeCode");
			return this;
		}

		public Criteria andEntityIdIsNull() {
			addCriterion("ENTITY_ID is null");
			return this;
		}

		public Criteria andEntityIdIsNotNull() {
			addCriterion("ENTITY_ID is not null");
			return this;
		}

		public Criteria andEntityIdEqualTo(String value) {
			addCriterion("ENTITY_ID =", value, "entityId");
			return this;
		}

		public Criteria andEntityIdNotEqualTo(String value) {
			addCriterion("ENTITY_ID <>", value, "entityId");
			return this;
		}

		public Criteria andEntityIdGreaterThan(String value) {
			addCriterion("ENTITY_ID >", value, "entityId");
			return this;
		}

		public Criteria andEntityIdGreaterThanOrEqualTo(String value) {
			addCriterion("ENTITY_ID >=", value, "entityId");
			return this;
		}

		public Criteria andEntityIdLessThan(String value) {
			addCriterion("ENTITY_ID <", value, "entityId");
			return this;
		}

		public Criteria andEntityIdLessThanOrEqualTo(String value) {
			addCriterion("ENTITY_ID <=", value, "entityId");
			return this;
		}

		public Criteria andEntityIdLike(String value) {
			addCriterion("ENTITY_ID like", value, "entityId");
			return this;
		}

		public Criteria andEntityIdNotLike(String value) {
			addCriterion("ENTITY_ID not like", value, "entityId");
			return this;
		}

		public Criteria andEntityIdIn(List<String> values) {
			addCriterion("ENTITY_ID in", values, "entityId");
			return this;
		}

		public Criteria andEntityIdNotIn(List<String> values) {
			addCriterion("ENTITY_ID not in", values, "entityId");
			return this;
		}

		public Criteria andEntityIdBetween(String value1, String value2) {
			addCriterion("ENTITY_ID between", value1, value2, "entityId");
			return this;
		}

		public Criteria andEntityIdNotBetween(String value1, String value2) {
			addCriterion("ENTITY_ID not between", value1, value2, "entityId");
			return this;
		}

		public Criteria andFatherEntityIdIsNull() {
			addCriterion("FATHER_ENTITY_ID is null");
			return this;
		}

		public Criteria andFatherEntityIdIsNotNull() {
			addCriterion("FATHER_ENTITY_ID is not null");
			return this;
		}

		public Criteria andFatherEntityIdEqualTo(String value) {
			addCriterion("FATHER_ENTITY_ID =", value, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdNotEqualTo(String value) {
			addCriterion("FATHER_ENTITY_ID <>", value, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdGreaterThan(String value) {
			addCriterion("FATHER_ENTITY_ID >", value, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdGreaterThanOrEqualTo(String value) {
			addCriterion("FATHER_ENTITY_ID >=", value, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdLessThan(String value) {
			addCriterion("FATHER_ENTITY_ID <", value, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdLessThanOrEqualTo(String value) {
			addCriterion("FATHER_ENTITY_ID <=", value, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdLike(String value) {
			addCriterion("FATHER_ENTITY_ID like", value, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdNotLike(String value) {
			addCriterion("FATHER_ENTITY_ID not like", value, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdIn(List<String> values) {
			addCriterion("FATHER_ENTITY_ID in", values, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdNotIn(List<String> values) {
			addCriterion("FATHER_ENTITY_ID not in", values, "fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdBetween(String value1, String value2) {
			addCriterion("FATHER_ENTITY_ID between", value1, value2,
					"fatherEntityId");
			return this;
		}

		public Criteria andFatherEntityIdNotBetween(String value1, String value2) {
			addCriterion("FATHER_ENTITY_ID not between", value1, value2,
					"fatherEntityId");
			return this;
		}

		public Criteria andDictTypeNameIsNull() {
			addCriterion("DICT_TYPE_NAME is null");
			return this;
		}

		public Criteria andDictTypeNameIsNotNull() {
			addCriterion("DICT_TYPE_NAME is not null");
			return this;
		}

		public Criteria andDictTypeNameEqualTo(String value) {
			addCriterion("DICT_TYPE_NAME =", value, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameNotEqualTo(String value) {
			addCriterion("DICT_TYPE_NAME <>", value, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameGreaterThan(String value) {
			addCriterion("DICT_TYPE_NAME >", value, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameGreaterThanOrEqualTo(String value) {
			addCriterion("DICT_TYPE_NAME >=", value, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameLessThan(String value) {
			addCriterion("DICT_TYPE_NAME <", value, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameLessThanOrEqualTo(String value) {
			addCriterion("DICT_TYPE_NAME <=", value, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameLike(String value) {
			addCriterion("DICT_TYPE_NAME like", value, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameNotLike(String value) {
			addCriterion("DICT_TYPE_NAME not like", value, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameIn(List<String> values) {
			addCriterion("DICT_TYPE_NAME in", values, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameNotIn(List<String> values) {
			addCriterion("DICT_TYPE_NAME not in", values, "dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameBetween(String value1, String value2) {
			addCriterion("DICT_TYPE_NAME between", value1, value2,
					"dictTypeName");
			return this;
		}

		public Criteria andDictTypeNameNotBetween(String value1, String value2) {
			addCriterion("DICT_TYPE_NAME not between", value1, value2,
					"dictTypeName");
			return this;
		}

		public Criteria andDictRoleIsNull() {
			addCriterion("DICT_ROLE is null");
			return this;
		}

		public Criteria andDictRoleIsNotNull() {
			addCriterion("DICT_ROLE is not null");
			return this;
		}

		public Criteria andDictRoleEqualTo(String value) {
			addCriterion("DICT_ROLE =", value, "dictRole");
			return this;
		}

		public Criteria andDictRoleNotEqualTo(String value) {
			addCriterion("DICT_ROLE <>", value, "dictRole");
			return this;
		}

		public Criteria andDictRoleGreaterThan(String value) {
			addCriterion("DICT_ROLE >", value, "dictRole");
			return this;
		}

		public Criteria andDictRoleGreaterThanOrEqualTo(String value) {
			addCriterion("DICT_ROLE >=", value, "dictRole");
			return this;
		}

		public Criteria andDictRoleLessThan(String value) {
			addCriterion("DICT_ROLE <", value, "dictRole");
			return this;
		}

		public Criteria andDictRoleLessThanOrEqualTo(String value) {
			addCriterion("DICT_ROLE <=", value, "dictRole");
			return this;
		}

		public Criteria andDictRoleLike(String value) {
			addCriterion("DICT_ROLE like", value, "dictRole");
			return this;
		}

		public Criteria andDictRoleNotLike(String value) {
			addCriterion("DICT_ROLE not like", value, "dictRole");
			return this;
		}

		public Criteria andDictRoleIn(List<String> values) {
			addCriterion("DICT_ROLE in", values, "dictRole");
			return this;
		}

		public Criteria andDictRoleNotIn(List<String> values) {
			addCriterion("DICT_ROLE not in", values, "dictRole");
			return this;
		}

		public Criteria andDictRoleBetween(String value1, String value2) {
			addCriterion("DICT_ROLE between", value1, value2, "dictRole");
			return this;
		}

		public Criteria andDictRoleNotBetween(String value1, String value2) {
			addCriterion("DICT_ROLE not between", value1, value2, "dictRole");
			return this;
		}

		public Criteria andUpdateFlagIsNull() {
			addCriterion("UPDATE_FLAG is null");
			return this;
		}

		public Criteria andUpdateFlagIsNotNull() {
			addCriterion("UPDATE_FLAG is not null");
			return this;
		}

		public Criteria andUpdateFlagEqualTo(String value) {
			addCriterion("UPDATE_FLAG =", value, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagNotEqualTo(String value) {
			addCriterion("UPDATE_FLAG <>", value, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagGreaterThan(String value) {
			addCriterion("UPDATE_FLAG >", value, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagGreaterThanOrEqualTo(String value) {
			addCriterion("UPDATE_FLAG >=", value, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagLessThan(String value) {
			addCriterion("UPDATE_FLAG <", value, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagLessThanOrEqualTo(String value) {
			addCriterion("UPDATE_FLAG <=", value, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagLike(String value) {
			addCriterion("UPDATE_FLAG like", value, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagNotLike(String value) {
			addCriterion("UPDATE_FLAG not like", value, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagIn(List<String> values) {
			addCriterion("UPDATE_FLAG in", values, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagNotIn(List<String> values) {
			addCriterion("UPDATE_FLAG not in", values, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagBetween(String value1, String value2) {
			addCriterion("UPDATE_FLAG between", value1, value2, "updateFlag");
			return this;
		}

		public Criteria andUpdateFlagNotBetween(String value1, String value2) {
			addCriterion("UPDATE_FLAG not between", value1, value2,
					"updateFlag");
			return this;
		}
	}
}