package com.huateng.framework.db.ibatis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TransTypeExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    public TransTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    protected TransTypeExample(TransTypeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table MNGDB.TB_TRANS_TYPE
     *
     * @abatorgenerated Mon Aug 06 14:47:24 CST 2012
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTransIdIsNull() {
            addCriterion("TRANS_ID is null");
            return this;
        }

        public Criteria andTransIdIsNotNull() {
            addCriterion("TRANS_ID is not null");
            return this;
        }

        public Criteria andTransIdEqualTo(String value) {
            addCriterion("TRANS_ID =", value, "transId");
            return this;
        }

        public Criteria andTransIdNotEqualTo(String value) {
            addCriterion("TRANS_ID <>", value, "transId");
            return this;
        }

        public Criteria andTransIdGreaterThan(String value) {
            addCriterion("TRANS_ID >", value, "transId");
            return this;
        }

        public Criteria andTransIdGreaterThanOrEqualTo(String value) {
            addCriterion("TRANS_ID >=", value, "transId");
            return this;
        }

        public Criteria andTransIdLessThan(String value) {
            addCriterion("TRANS_ID <", value, "transId");
            return this;
        }

        public Criteria andTransIdLessThanOrEqualTo(String value) {
            addCriterion("TRANS_ID <=", value, "transId");
            return this;
        }

        public Criteria andTransIdLike(String value) {
            addCriterion("TRANS_ID like", value, "transId");
            return this;
        }

        public Criteria andTransIdNotLike(String value) {
            addCriterion("TRANS_ID not like", value, "transId");
            return this;
        }

        public Criteria andTransIdIn(List<String> values) {
            addCriterion("TRANS_ID in", values, "transId");
            return this;
        }

        public Criteria andTransIdNotIn(List<String> values) {
            addCriterion("TRANS_ID not in", values, "transId");
            return this;
        }

        public Criteria andTransIdBetween(String value1, String value2) {
            addCriterion("TRANS_ID between", value1, value2, "transId");
            return this;
        }

        public Criteria andTransIdNotBetween(String value1, String value2) {
            addCriterion("TRANS_ID not between", value1, value2, "transId");
            return this;
        }

        public Criteria andTransNameIsNull() {
            addCriterion("TRANS_NAME is null");
            return this;
        }

        public Criteria andTransNameIsNotNull() {
            addCriterion("TRANS_NAME is not null");
            return this;
        }

        public Criteria andTransNameEqualTo(String value) {
            addCriterion("TRANS_NAME =", value, "transName");
            return this;
        }

        public Criteria andTransNameNotEqualTo(String value) {
            addCriterion("TRANS_NAME <>", value, "transName");
            return this;
        }

        public Criteria andTransNameGreaterThan(String value) {
            addCriterion("TRANS_NAME >", value, "transName");
            return this;
        }

        public Criteria andTransNameGreaterThanOrEqualTo(String value) {
            addCriterion("TRANS_NAME >=", value, "transName");
            return this;
        }

        public Criteria andTransNameLessThan(String value) {
            addCriterion("TRANS_NAME <", value, "transName");
            return this;
        }

        public Criteria andTransNameLessThanOrEqualTo(String value) {
            addCriterion("TRANS_NAME <=", value, "transName");
            return this;
        }

        public Criteria andTransNameLike(String value) {
            addCriterion("TRANS_NAME like", value, "transName");
            return this;
        }

        public Criteria andTransNameNotLike(String value) {
            addCriterion("TRANS_NAME not like", value, "transName");
            return this;
        }

        public Criteria andTransNameIn(List<String> values) {
            addCriterion("TRANS_NAME in", values, "transName");
            return this;
        }

        public Criteria andTransNameNotIn(List<String> values) {
            addCriterion("TRANS_NAME not in", values, "transName");
            return this;
        }

        public Criteria andTransNameBetween(String value1, String value2) {
            addCriterion("TRANS_NAME between", value1, value2, "transName");
            return this;
        }

        public Criteria andTransNameNotBetween(String value1, String value2) {
            addCriterion("TRANS_NAME not between", value1, value2, "transName");
            return this;
        }

        public Criteria andTransCodeIsNull() {
            addCriterion("TRANS_CODE is null");
            return this;
        }

        public Criteria andTransCodeIsNotNull() {
            addCriterion("TRANS_CODE is not null");
            return this;
        }

        public Criteria andTransCodeEqualTo(String value) {
            addCriterion("TRANS_CODE =", value, "transCode");
            return this;
        }

        public Criteria andTransCodeNotEqualTo(String value) {
            addCriterion("TRANS_CODE <>", value, "transCode");
            return this;
        }

        public Criteria andTransCodeGreaterThan(String value) {
            addCriterion("TRANS_CODE >", value, "transCode");
            return this;
        }

        public Criteria andTransCodeGreaterThanOrEqualTo(String value) {
            addCriterion("TRANS_CODE >=", value, "transCode");
            return this;
        }

        public Criteria andTransCodeLessThan(String value) {
            addCriterion("TRANS_CODE <", value, "transCode");
            return this;
        }

        public Criteria andTransCodeLessThanOrEqualTo(String value) {
            addCriterion("TRANS_CODE <=", value, "transCode");
            return this;
        }

        public Criteria andTransCodeLike(String value) {
            addCriterion("TRANS_CODE like", value, "transCode");
            return this;
        }

        public Criteria andTransCodeNotLike(String value) {
            addCriterion("TRANS_CODE not like", value, "transCode");
            return this;
        }

        public Criteria andTransCodeIn(List<String> values) {
            addCriterion("TRANS_CODE in", values, "transCode");
            return this;
        }

        public Criteria andTransCodeNotIn(List<String> values) {
            addCriterion("TRANS_CODE not in", values, "transCode");
            return this;
        }

        public Criteria andTransCodeBetween(String value1, String value2) {
            addCriterion("TRANS_CODE between", value1, value2, "transCode");
            return this;
        }

        public Criteria andTransCodeNotBetween(String value1, String value2) {
            addCriterion("TRANS_CODE not between", value1, value2, "transCode");
            return this;
        }

        public Criteria andDataStateIsNull() {
            addCriterion("DATA_STATE is null");
            return this;
        }

        public Criteria andDataStateIsNotNull() {
            addCriterion("DATA_STATE is not null");
            return this;
        }

        public Criteria andDataStateEqualTo(String value) {
            addCriterion("DATA_STATE =", value, "dataState");
            return this;
        }

        public Criteria andDataStateNotEqualTo(String value) {
            addCriterion("DATA_STATE <>", value, "dataState");
            return this;
        }

        public Criteria andDataStateGreaterThan(String value) {
            addCriterion("DATA_STATE >", value, "dataState");
            return this;
        }

        public Criteria andDataStateGreaterThanOrEqualTo(String value) {
            addCriterion("DATA_STATE >=", value, "dataState");
            return this;
        }

        public Criteria andDataStateLessThan(String value) {
            addCriterion("DATA_STATE <", value, "dataState");
            return this;
        }

        public Criteria andDataStateLessThanOrEqualTo(String value) {
            addCriterion("DATA_STATE <=", value, "dataState");
            return this;
        }

        public Criteria andDataStateLike(String value) {
            addCriterion("DATA_STATE like", value, "dataState");
            return this;
        }

        public Criteria andDataStateNotLike(String value) {
            addCriterion("DATA_STATE not like", value, "dataState");
            return this;
        }

        public Criteria andDataStateIn(List<String> values) {
            addCriterion("DATA_STATE in", values, "dataState");
            return this;
        }

        public Criteria andDataStateNotIn(List<String> values) {
            addCriterion("DATA_STATE not in", values, "dataState");
            return this;
        }

        public Criteria andDataStateBetween(String value1, String value2) {
            addCriterion("DATA_STATE between", value1, value2, "dataState");
            return this;
        }

        public Criteria andDataStateNotBetween(String value1, String value2) {
            addCriterion("DATA_STATE not between", value1, value2, "dataState");
            return this;
        }
    }
}