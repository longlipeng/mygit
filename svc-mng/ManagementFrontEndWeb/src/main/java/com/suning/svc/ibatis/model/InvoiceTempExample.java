package com.suning.svc.ibatis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InvoiceTempExample {

    /**
     * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    protected String orderByClause;
    /**
     * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    public InvoiceTempExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    protected InvoiceTempExample(InvoiceTempExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS. This class corresponds to the database table TB_INVOICE_TEMP
     * 
     * @abatorgenerated Sun Nov 10 09:45:50 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;
        protected List criteriaWithSingleValue;
        protected List criteriaWithListValue;
        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
                    || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andInvoiceNameIsNull() {
            addCriterion("INVOICE_NAME is null");
            return this;
        }

        public Criteria andInvoiceNameIsNotNull() {
            addCriterion("INVOICE_NAME is not null");
            return this;
        }

        public Criteria andInvoiceNameEqualTo(String value) {
            addCriterion("INVOICE_NAME =", value, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameNotEqualTo(String value) {
            addCriterion("INVOICE_NAME <>", value, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameGreaterThan(String value) {
            addCriterion("INVOICE_NAME >", value, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameGreaterThanOrEqualTo(String value) {
            addCriterion("INVOICE_NAME >=", value, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameLessThan(String value) {
            addCriterion("INVOICE_NAME <", value, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameLessThanOrEqualTo(String value) {
            addCriterion("INVOICE_NAME <=", value, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameLike(String value) {
            addCriterion("INVOICE_NAME like", value, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameNotLike(String value) {
            addCriterion("INVOICE_NAME not like", value, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameIn(List values) {
            addCriterion("INVOICE_NAME in", values, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameNotIn(List values) {
            addCriterion("INVOICE_NAME not in", values, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameBetween(String value1, String value2) {
            addCriterion("INVOICE_NAME between", value1, value2, "invoiceName");
            return this;
        }

        public Criteria andInvoiceNameNotBetween(String value1, String value2) {
            addCriterion("INVOICE_NAME not between", value1, value2, "invoiceName");
            return this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("AMOUNT is null");
            return this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("AMOUNT is not null");
            return this;
        }

        public Criteria andAmountEqualTo(Long value) {
            addCriterion("AMOUNT =", value, "amount");
            return this;
        }

        public Criteria andAmountNotEqualTo(Long value) {
            addCriterion("AMOUNT <>", value, "amount");
            return this;
        }

        public Criteria andAmountGreaterThan(Long value) {
            addCriterion("AMOUNT >", value, "amount");
            return this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("AMOUNT >=", value, "amount");
            return this;
        }

        public Criteria andAmountLessThan(Long value) {
            addCriterion("AMOUNT <", value, "amount");
            return this;
        }

        public Criteria andAmountLessThanOrEqualTo(Long value) {
            addCriterion("AMOUNT <=", value, "amount");
            return this;
        }

        public Criteria andAmountIn(List values) {
            addCriterion("AMOUNT in", values, "amount");
            return this;
        }

        public Criteria andAmountNotIn(List values) {
            addCriterion("AMOUNT not in", values, "amount");
            return this;
        }

        public Criteria andAmountBetween(Long value1, Long value2) {
            addCriterion("AMOUNT between", value1, value2, "amount");
            return this;
        }

        public Criteria andAmountNotBetween(Long value1, Long value2) {
            addCriterion("AMOUNT not between", value1, value2, "amount");
            return this;
        }

        public Criteria andInvoiceProjectIsNull() {
            addCriterion("INVOICE_PROJECT is null");
            return this;
        }

        public Criteria andInvoiceProjectIsNotNull() {
            addCriterion("INVOICE_PROJECT is not null");
            return this;
        }

        public Criteria andInvoiceProjectEqualTo(String value) {
            addCriterion("INVOICE_PROJECT =", value, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectNotEqualTo(String value) {
            addCriterion("INVOICE_PROJECT <>", value, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectGreaterThan(String value) {
            addCriterion("INVOICE_PROJECT >", value, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectGreaterThanOrEqualTo(String value) {
            addCriterion("INVOICE_PROJECT >=", value, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectLessThan(String value) {
            addCriterion("INVOICE_PROJECT <", value, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectLessThanOrEqualTo(String value) {
            addCriterion("INVOICE_PROJECT <=", value, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectLike(String value) {
            addCriterion("INVOICE_PROJECT like", value, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectNotLike(String value) {
            addCriterion("INVOICE_PROJECT not like", value, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectIn(List values) {
            addCriterion("INVOICE_PROJECT in", values, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectNotIn(List values) {
            addCriterion("INVOICE_PROJECT not in", values, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectBetween(String value1, String value2) {
            addCriterion("INVOICE_PROJECT between", value1, value2, "invoiceProject");
            return this;
        }

        public Criteria andInvoiceProjectNotBetween(String value1, String value2) {
            addCriterion("INVOICE_PROJECT not between", value1, value2, "invoiceProject");
            return this;
        }

        public Criteria andCustomerEntityIdIsNull() {
            addCriterion("CUSTOMER_ENTITY_ID is null");
            return this;
        }

        public Criteria andCustomerEntityIdIsNotNull() {
            addCriterion("CUSTOMER_ENTITY_ID is not null");
            return this;
        }

        public Criteria andCustomerEntityIdEqualTo(String value) {
            addCriterion("CUSTOMER_ENTITY_ID =", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdNotEqualTo(String value) {
            addCriterion("CUSTOMER_ENTITY_ID <>", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdGreaterThan(String value) {
            addCriterion("CUSTOMER_ENTITY_ID >", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdGreaterThanOrEqualTo(String value) {
            addCriterion("CUSTOMER_ENTITY_ID >=", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdLessThan(String value) {
            addCriterion("CUSTOMER_ENTITY_ID <", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdLessThanOrEqualTo(String value) {
            addCriterion("CUSTOMER_ENTITY_ID <=", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdLike(String value) {
            addCriterion("CUSTOMER_ENTITY_ID like", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdNotLike(String value) {
            addCriterion("CUSTOMER_ENTITY_ID not like", value, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdIn(List values) {
            addCriterion("CUSTOMER_ENTITY_ID in", values, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdNotIn(List values) {
            addCriterion("CUSTOMER_ENTITY_ID not in", values, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdBetween(String value1, String value2) {
            addCriterion("CUSTOMER_ENTITY_ID between", value1, value2, "customerEntityId");
            return this;
        }

        public Criteria andCustomerEntityIdNotBetween(String value1, String value2) {
            addCriterion("CUSTOMER_ENTITY_ID not between", value1, value2, "customerEntityId");
            return this;
        }

        public Criteria andFatherEntityIdIsNull() {
            addCriterion("FATHER_ENTITY_ID is null");
            return this;
        }

        public Criteria andFatherEntityIdIsNotNull() {
            addCriterion("FATHER_ENTITY_ID is not null");
            return this;
        }

        public Criteria andFatherEntityIdEqualTo(String value) {
            addCriterion("FATHER_ENTITY_ID =", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdNotEqualTo(String value) {
            addCriterion("FATHER_ENTITY_ID <>", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdGreaterThan(String value) {
            addCriterion("FATHER_ENTITY_ID >", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdGreaterThanOrEqualTo(String value) {
            addCriterion("FATHER_ENTITY_ID >=", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdLessThan(String value) {
            addCriterion("FATHER_ENTITY_ID <", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdLessThanOrEqualTo(String value) {
            addCriterion("FATHER_ENTITY_ID <=", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdLike(String value) {
            addCriterion("FATHER_ENTITY_ID like", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdNotLike(String value) {
            addCriterion("FATHER_ENTITY_ID not like", value, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdIn(List values) {
            addCriterion("FATHER_ENTITY_ID in", values, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdNotIn(List values) {
            addCriterion("FATHER_ENTITY_ID not in", values, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdBetween(String value1, String value2) {
            addCriterion("FATHER_ENTITY_ID between", value1, value2, "fatherEntityId");
            return this;
        }

        public Criteria andFatherEntityIdNotBetween(String value1, String value2) {
            addCriterion("FATHER_ENTITY_ID not between", value1, value2, "fatherEntityId");
            return this;
        }

        public Criteria andSettlementIdIsNull() {
            addCriterion("SETTLEMENT_ID is null");
            return this;
        }

        public Criteria andSettlementIdIsNotNull() {
            addCriterion("SETTLEMENT_ID is not null");
            return this;
        }

        public Criteria andSettlementIdEqualTo(Long value) {
            addCriterion("SETTLEMENT_ID =", value, "settlementId");
            return this;
        }

        public Criteria andSettlementIdNotEqualTo(Long value) {
            addCriterion("SETTLEMENT_ID <>", value, "settlementId");
            return this;
        }

        public Criteria andSettlementIdGreaterThan(Long value) {
            addCriterion("SETTLEMENT_ID >", value, "settlementId");
            return this;
        }

        public Criteria andSettlementIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SETTLEMENT_ID >=", value, "settlementId");
            return this;
        }

        public Criteria andSettlementIdLessThan(Long value) {
            addCriterion("SETTLEMENT_ID <", value, "settlementId");
            return this;
        }

        public Criteria andSettlementIdLessThanOrEqualTo(Long value) {
            addCriterion("SETTLEMENT_ID <=", value, "settlementId");
            return this;
        }

        public Criteria andSettlementIdIn(List values) {
            addCriterion("SETTLEMENT_ID in", values, "settlementId");
            return this;
        }

        public Criteria andSettlementIdNotIn(List values) {
            addCriterion("SETTLEMENT_ID not in", values, "settlementId");
            return this;
        }

        public Criteria andSettlementIdBetween(Long value1, Long value2) {
            addCriterion("SETTLEMENT_ID between", value1, value2, "settlementId");
            return this;
        }

        public Criteria andSettlementIdNotBetween(Long value1, Long value2) {
            addCriterion("SETTLEMENT_ID not between", value1, value2, "settlementId");
            return this;
        }

        public Criteria andCustomerNameIsNull() {
            addCriterion("CUSTOMER_NAME is null");
            return this;
        }

        public Criteria andCustomerNameIsNotNull() {
            addCriterion("CUSTOMER_NAME is not null");
            return this;
        }

        public Criteria andCustomerNameEqualTo(String value) {
            addCriterion("CUSTOMER_NAME =", value, "customerName");
            return this;
        }

        public Criteria andCustomerNameNotEqualTo(String value) {
            addCriterion("CUSTOMER_NAME <>", value, "customerName");
            return this;
        }

        public Criteria andCustomerNameGreaterThan(String value) {
            addCriterion("CUSTOMER_NAME >", value, "customerName");
            return this;
        }

        public Criteria andCustomerNameGreaterThanOrEqualTo(String value) {
            addCriterion("CUSTOMER_NAME >=", value, "customerName");
            return this;
        }

        public Criteria andCustomerNameLessThan(String value) {
            addCriterion("CUSTOMER_NAME <", value, "customerName");
            return this;
        }

        public Criteria andCustomerNameLessThanOrEqualTo(String value) {
            addCriterion("CUSTOMER_NAME <=", value, "customerName");
            return this;
        }

        public Criteria andCustomerNameLike(String value) {
            addCriterion("CUSTOMER_NAME like", value, "customerName");
            return this;
        }

        public Criteria andCustomerNameNotLike(String value) {
            addCriterion("CUSTOMER_NAME not like", value, "customerName");
            return this;
        }

        public Criteria andCustomerNameIn(List values) {
            addCriterion("CUSTOMER_NAME in", values, "customerName");
            return this;
        }

        public Criteria andCustomerNameNotIn(List values) {
            addCriterion("CUSTOMER_NAME not in", values, "customerName");
            return this;
        }

        public Criteria andCustomerNameBetween(String value1, String value2) {
            addCriterion("CUSTOMER_NAME between", value1, value2, "customerName");
            return this;
        }

        public Criteria andCustomerNameNotBetween(String value1, String value2) {
            addCriterion("CUSTOMER_NAME not between", value1, value2, "customerName");
            return this;
        }
    }
}