package com.huateng.framework.ibatis.dao;

import com.allinfinance.univer.issuer.dto.product.ProductDTO;
import com.allinfinance.univer.seller.cardholder.dto.CardholderDTO;
import com.allinfinance.univer.seller.cardholder.dto.CardholderQueryDTO;
import com.allinfinance.univer.seller.cardholder.dto.IdCardInfoDTO;
import com.allinfinance.univer.seller.order.dto.SellOrderOrigCardListDTO;
import com.huateng.framework.exception.BizServiceException;
import com.huateng.framework.ibatis.model.Cardholder;
import com.huateng.framework.ibatis.model.CardholderExample;

import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class CardholderDAOImpl extends SqlMapClientDaoSupport implements
		CardholderDAO {

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public CardholderDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public void insert(Cardholder record) {
		getSqlMapClientTemplate().insert(
				"TB_CARDHOLDER.abatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public int updateByPrimaryKey(Cardholder record) {
		int rows = getSqlMapClientTemplate().update(
				"TB_CARDHOLDER.abatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public int updateByPrimaryKeySelective(Cardholder record) {
		int rows = getSqlMapClientTemplate().update(
				"TB_CARDHOLDER.abatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	@SuppressWarnings("unchecked")
	public List<Cardholder> selectByExample(CardholderExample example) {
		List<Cardholder> list = (List<Cardholder>) getSqlMapClientTemplate()
				.queryForList("TB_CARDHOLDER.abatorgenerated_selectByExample",
						example);
		return list;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public Cardholder selectByPrimaryKey(String cardholderId) {
		Cardholder key = new Cardholder();
		key.setCardholderId(cardholderId);
		Cardholder record = (Cardholder) getSqlMapClientTemplate()
				.queryForObject(
						"TB_CARDHOLDER.abatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public int deleteByExample(CardholderExample example) {
		int rows = getSqlMapClientTemplate().delete(
				"TB_CARDHOLDER.abatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public int deleteByPrimaryKey(String cardholderId) {
		Cardholder key = new Cardholder();
		key.setCardholderId(cardholderId);
		int rows = getSqlMapClientTemplate().delete(
				"TB_CARDHOLDER.abatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public int countByExample(CardholderExample example) {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"TB_CARDHOLDER.abatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public int updateByExampleSelective(Cardholder record,
			CardholderExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate()
				.update(
						"TB_CARDHOLDER.abatorgenerated_updateByExampleSelective",
						parms);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	public int updateByExample(Cardholder record, CardholderExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"TB_CARDHOLDER.abatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table TB_CARDHOLDER
	 * 
	 * @abatorgenerated Wed Jan 05 14:00:47 CST 2011
	 */
	private static class UpdateByExampleParms extends CardholderExample {
		private Object record;

		public UpdateByExampleParms(Object record, CardholderExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	public List<Map<String, String>> selectCardNoByCardholderId(
			String cardholderId) throws Exception {
		List<Map<String, String>> lstCardNO = null;
		try {
			lstCardNO = (List<Map<String, String>>) getSqlMapClientTemplate()
					.queryForList(
							"TB_SELL_ORDER_CARD_LIST.selectCardNoByCardholderId",
							cardholderId);
		} catch (Exception e) {
			throw e;
		}
		return lstCardNO;
	}
	@SuppressWarnings("unchecked")
	public List<ProductDTO> selectCardNoListByCardholderId(
			String cardholderId) throws Exception {
		
		List<ProductDTO> productId = null;
		try {
			productId = (List<ProductDTO>) getSqlMapClientTemplate()
					.queryForList(
							"TB_SELL_ORDER_CARD_LIST.selectCardNoListByCardholderId",
							cardholderId);
		} catch (Exception e) {
			throw e;
		}
		return productId;
	}
	
	public SellOrderOrigCardListDTO selectCardStateByCardNo(String cardNo)
			throws BizServiceException {
		//List<CardholderQueryDTO> resultCardholder = null;
		SellOrderOrigCardListDTO sellOrderOrigCardListDTO=new SellOrderOrigCardListDTO();
		try {
			sellOrderOrigCardListDTO = (SellOrderOrigCardListDTO) getSqlMapClientTemplate()
					.queryForObject("TB_SELL_ORDER_CARD_LIST.selectCardStateByCardNo",
							cardNo);
		} catch (Exception e) {
			logger.error(e.getMessage());
			throw new BizServiceException("查询卡信息失败");
		}
		return sellOrderOrigCardListDTO;
	}

	public List<CardholderQueryDTO> selectCardholderByCardNo(String cardNo)
			throws BizServiceException {
		List<CardholderQueryDTO> resultCardholder = null;
		try {
			resultCardholder = (List<CardholderQueryDTO>)getSqlMapClientTemplate()
					.queryForList("TB_CARDHOLDER.selectCardHolderByCardNo",
							cardNo);
		} catch (Exception e) {
			logger.error(e.getMessage());
			throw new BizServiceException("查询持卡人名称失败");
		}
		return resultCardholder;
	}
	
	/**
	 * 根据持卡人身份证查询持卡人
	 */
	public List<CardholderDTO> selectByCardholderIdNo(CardholderDTO cardholderDTO)
			throws BizServiceException {
		List<CardholderDTO> resultCardholder = this.getSqlMapClientTemplate().
					queryForList("TB_CARDHOLDER.selectCardHolderByIdNo", cardholderDTO);
		
		return resultCardholder;
	}

	@Override
	public List<CardholderDTO> selectOtherHolderByIdNo(
			CardholderDTO cardholderDTO) throws BizServiceException {
		List<CardholderDTO> resultCardholder = this.getSqlMapClientTemplate().
				queryForList("TB_CARDHOLDER.selectOtherHolderByIdNo", cardholderDTO);
	
	return resultCardholder;
	}

	@Override
	public List<IdCardInfoDTO> selectImgInfo(String idNo) {
		// TODO Auto-generated method stub
		List<IdCardInfoDTO> resultIDCardImgDTO = this.getSqlMapClientTemplate().
				queryForList("TB_CARDHOLDER.getImgInfoByIdNo", idNo);
		return resultIDCardImgDTO;
	}
	
	
}