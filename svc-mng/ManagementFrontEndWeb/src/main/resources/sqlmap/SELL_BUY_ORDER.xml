<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="SELL_BUY_ORDER">
	<!-- 查询营销机构合同 -->
	<select id="selectSellContractForBuyOrder"
		resultClass="com.allinfinance.univer.seller.sellercontract.dto.SellerContractDTO"
		remapResults="true" parameterClass="com.allinfinance.univer.seller.order.dto.SellBuyOrderDTO">
		SELECT
			T1.SELL_CONTRACT_ID as "sellContractId",
			T2.SELLER_NAME AS "contractSellerName",
			T3.CARD_FEE AS "cardFee",
      		t3.annual_fee as "annualFee",
			T1.CONTRACT_BUYER as "contractBuyer",
			T1.CONTRACT_SELLER as "contractSeller",
			T1.DELIVERY_FEE as "deliveryFee",
			T1.SETTLE_PERIOD_RULE as "settlePeriodRule",
			T1.SMS_SVC_STAT as "smsSvcStat",
			T1.EMAIL_SVC_STAT as "emailSvcStat",
			T1.MONSTMT_SVC_STAT as "monstmtSvcStat",
			T1.WEB_PAY_STAT as "webPayStat",
			T1.WEB_SMS_SVC_STAT as "webSmsSvcStat",
			T1.WEB_EMAIL_SVC_STAT as "webEmailSvcStat",
			T1.CONTRACT_STATE  as "contractState",
			T1.CONTRACT_TYPE as "contractType",
			TO_DATE(T1.EXPIRY_DATE,'YYYY-MM-DD') as "expiryDate"
		FROM
			TB_SELL_CONTRACT T1 left join 
            TB_SELL_PROD_CONTRACT T3 on T1.SELL_CONTRACT_ID = T3.SELL_CONTRACT_ID left join
			TB_SELLER T2 on T1.CONTRACT_SELLER = T2.ENTITY_ID
			
		WHERE
			 T3.PRODUCT_ID = #productId:VARCHAR#
		AND T1.CONTRACT_BUYER = #defaultEntityId:VARCHAR#
		AND T1.CONTRACT_TYPE='2'
         AND T1.CONTRACT_STATE='1'
 UNION

		SELECT
			T1.SELL_CONTRACT_ID as "sellContractId",
			T2.ISSUER_NAME AS "contractSellerName",
			T3.CARD_FEE AS "cardFee",
      		t3.annual_fee as "annualFee",
			T1.CONTRACT_BUYER as "contractBuyer",
			T1.CONTRACT_SELLER as "contractSeller",
			T1.DELIVERY_FEE as "deliveryFee",
			T1.SETTLE_PERIOD_RULE as "settlePeriodRule",
			T1.SMS_SVC_STAT as "smsSvcStat",
			T1.EMAIL_SVC_STAT as "emailSvcStat",
			T1.MONSTMT_SVC_STAT as "monstmtSvcStat",
			T1.WEB_PAY_STAT as "webPayStat",
			T1.WEB_SMS_SVC_STAT as "webSmsSvcStat",
			T1.WEB_EMAIL_SVC_STAT as "webEmailSvcStat",
			T1.CONTRACT_STATE  as "contractState",
			T1.CONTRACT_TYPE as "contractType",
			TO_DATE(T1.EXPIRY_DATE,'YYYY-MM-DD') as "expiryDate"
		FROM
			TB_SELL_CONTRACT T1 left join
			TB_SELL_PROD_CONTRACT T3 on T1.SELL_CONTRACT_ID = T3.SELL_CONTRACT_ID left join
			TB_ISSUER T2 on T1.CONTRACT_SELLER = T2.ENTITY_ID		
		WHERE		
		    T3.PRODUCT_ID = #productId:VARCHAR#
		AND T1.CONTRACT_BUYER = #defaultEntityId:VARCHAR#
		AND T1.CONTRACT_TYPE='1'
		AND T1.CONTRACT_STATE='1'
	</select>
	<!-- 查询发卡机构合同 -->
	<select id="selectloyaltyContractForBuyOrder"
		resultClass="com.allinfinance.univer.issuer.dto.issuerContract.LoyaltyContractDTO"
		remapResults="true" parameterClass="com.allinfinance.univer.seller.order.dto.SellBuyOrderDTO">
		
		SELECT
			T1.LOYALTY_CONTRACT_ID as "loyaltyContractId",
			T2.ISSUER_NAME AS "contractSellerName",
			T3.CARD_FEE AS "cardFee",
      		t3.annual_fee as "annualFee",
      		T1.RULE_NO as "ruleNo",
			T1.CONTRACT_BUYER as "contractBuyer",
			T1.CONTRACT_SELLER as "contractSeller",
			T1.DELIVERY_FEE as "deliveryFee",
			T1.SMS_SVC_STAT as "smsSvcStat",
			T1.EMAIL_SVC_STAT as "emailSvcStat",
			T1.MONSTMT_SVC_STAT as "monstmtSvcStat",
			T1.WEB_PAY_STAT as "webPayStat",
			T1.WEB_SMS_SVC_STAT as "webSmsSvcStat",
			T1.WEB_EMAIL_SVC_STAT as "webEmailSvcStat",
			T1.CONTRACT_STATE  as "contractState",
			TO_DATE(T1.EXPIRY_DATE,'YYYY-MM-DD') as "expiryDate"
		FROM
			TB_LOYALTY_CONTRACT T1 left join 
			TB_LOYALTY_PROD_CONTRACT T3 on T1.LOYALTY_CONTRACT_ID = T3.LOYALTY_CONTRACT_ID left join
			TB_ISSUER T2 on T1.CONTRACT_SELLER = T2.ENTITY_ID			
		WHERE
		    T3.PRODUCT_ID = #productId:VARCHAR#
		    AND T1.CONTRACT_BUYER = #defaultEntityId:VARCHAR#
	</select>
	
	<!-- 分组查询订单明细 -->
	<select id="selectOrderListForBuyOrderInput"
		resultClass="com.huateng.framework.ibatis.model.SellOrderList"
		remapResults="true" parameterClass="java.lang.String">
		 SELECT 
			 SUM(T.CARD_AMOUNT) AS "cardAmount",
			 T.FACE_VALUE AS "faceValue",
			 T.CARD_LAYOUT_ID AS "cardLayoutId",
       		 T.FACE_VALUE_TYPE as "faceValueType"
		 FROM  TB_SELL_ORDER_LIST T
		 WHERE T.ORDER_ID IN ($orderIdArray$)
		 AND   T.FACE_VALUE_TYPE='0'
		 GROUP BY T.CARD_LAYOUT_ID,T.FACE_VALUE,T.FACE_VALUE_TYPE
		 
		 UNION
		 
		 SELECT 
			 SUM(T.CARD_AMOUNT) AS "cardAmount",
			 '0' AS "faceValue",
			 T.CARD_LAYOUT_ID AS "cardLayoutId",
       		 T.FACE_VALUE_TYPE as "faceValueType"
		 FROM  TB_SELL_ORDER_LIST T
		 WHERE T.ORDER_ID IN ($orderIdArray$)
		 AND T.FACE_VALUE_TYPE='1'
		 GROUP BY T.CARD_LAYOUT_ID,T.FACE_VALUE_TYPE
		
	</select>
	
	<select id="selectDefaultContactForBuyOrder"
		resultClass="com.huateng.framework.ibatis.model.DeliveryContact"
		parameterClass="java.lang.String">
	 	SELECT
			T1.DELIVERY_CONTACT_ID AS "deliveryContactId",
			T1.DELIVERY_POINT_ID AS "deliveryPointId"
	 	FROM
			TB_DELIVERY_CONTACT T1,
			TB_ENTITY_DELIVERY T2,
			TB_SELLER T3
		WHERE
			T1.DELIVERY_POINT_ID = T2.DELIVERY_ID
		AND
			T2.ENTITY_ID = T3.ENTITY_ID
		AND 
			T2.DEFAULT_FLAG = '1'
		AND
			T1.DEFAULT_FLAG = '1'
		AND
			T1.DATA_STATE='1'
		AND 
			T2.DATA_STATE='1'
		AND
			T3.DATA_STATE='1'
		AND
			T3.ENTITY_ID=#sellerId:VARCHAR#
	</select>
	<select id="selectDefaultContactForLoyaltyBuyOrder"
		resultClass="com.huateng.framework.ibatis.model.DeliveryContact"
		parameterClass="java.lang.String">
	 	SELECT
			T1.DELIVERY_CONTACT_ID AS "deliveryContactId",
			T1.DELIVERY_POINT_ID AS "deliveryPointId"
	 	FROM
			TB_DELIVERY_CONTACT T1,
			TB_ENTITY_DELIVERY T2,
			TB_ISSUER T3
		WHERE
			T1.DELIVERY_POINT_ID = T2.DELIVERY_ID
		AND
			T2.ENTITY_ID = T3.ENTITY_ID
		AND 
			T2.DEFAULT_FLAG = '1'
		AND
			T1.DEFAULT_FLAG = '1'
		AND
			T1.DATA_STATE='1'
		AND 
			T2.DATA_STATE='1'
		AND
			T3.DATA_STATE='1'
		AND
			T3.ENTITY_ID=#sellerId:VARCHAR#
	</select>
	<select id="selectRequiredAmountCardListForBuyOrder"
		resultClass="com.allinfinance.univer.seller.order.dto.SellOrderListDTO"
		parameterClass="com.allinfinance.univer.seller.order.dto.SellBuyOrderDTO">
		SELECT 
		   T5.CARD_LAYOUT_ID AS "cardLayoutId",
	       T5.FACE_VALUE / 100 AS "faceValue",
	       T5.FACE_VALUE_TYPE AS "faceValueType",
	       NVL(T6.SUM_CARDSTOCK,'0') AS "stockAmount",
	       T5.SUM_CARDAMOUNT AS "sumAmount",
	       NVL(T6.SUM_CARDSTOCK,'0') - T5.SUM_CARDAMOUNT AS "requireAmount"
		FROM
	       ( SELECT  SUM(T2.CARD_AMOUNT - NVL(T2.REAL_AMOUNT,'0')) SUM_CARDAMOUNT,T3.PRODUCT_ID,T2.CARD_LAYOUT_ID,T2.FACE_VALUE,T2.FACE_VALUE_TYPE
	         FROM TB_SELL_ORDER_LIST T2,
	              TB_SELL_ORDER T3
	         WHERE T2.ORDER_ID = T3.ORDER_ID
	         AND T2.DATA_STATE='1' 
	         AND T3.ORDER_ID IN ($orderIdArray$)
	         GROUP BY T3.PRODUCT_ID, T2.CARD_LAYOUT_ID, T2.FACE_VALUE,T2.FACE_VALUE_TYPE) T5 left join
	         
	       (select COUNT(T1.CARD_NO) AS SUM_CARDSTOCK,
                T1.PRODUCT_ID,
                T1.CARD_LAYOUT_ID,
                T1.FACE_VALUE,
                T1.FACE_VALUE_TYPE 
                from (SELECT DISTINCT T1.CARD_NO,
                T1.PRODUCT_ID,
                T1.CARD_LAYOUT_ID,
                T1.FACE_VALUE,
                T1.FACE_VALUE_TYPE
           FROM TB_ENTITY_STOCK    T1,
                TB_SELL_ORDER_LIST T2,
                TB_CARD_LAYOUT     T3,
                TB_SELL_ORDER      T4
          WHERE T1.DATA_STATE = '1'
            AND T2.DATA_STATE = '1'
            AND T1.STOCK_STATE = '1'
            AND T1.CARD_LAYOUT_ID = T3.CARD_LAYOUT_ID
            AND T1.CARD_LAYOUT_ID = T2.CARD_LAYOUT_ID
            AND T1.FACE_VALUE_TYPE = T2.FACE_VALUE_TYPE
            and decode(t1.face_value_type, '0', T1.FACE_VALUE, '0') =
                decode(t2.face_value_type, '0', t2.face_value, '0')
           AND         	
           <![CDATA[ 
                          TO_NUMBER(NVL(T2.REAL_AMOUNT, 0)) < TO_NUMBER(T2.CARD_AMOUNT)
                          ]]>
                         AND T2.ORDER_ID = T4.ORDER_ID
                         AND T1.PRODUCT_ID = T4.PRODUCT_ID
                         AND
                         <![CDATA[ 
                                    to_date(T2.VALIDITY_PERIOD,
                                     'YYYY-MM-DD HH24MISS') <= to_date(T1.CARD_VALID_DATE,
                                     'YYYY-MM-DD HH24MISS')
                                      ]]>
            and t1.entity_id=#defaultEntityId:VARCHAR#)T1
          GROUP BY T1.PRODUCT_ID,
                   T1.CARD_LAYOUT_ID,
                   T1.FACE_VALUE,
                   T1.FACE_VALUE_TYPE) T6
                    on T5.PRODUCT_ID = T6.PRODUCT_ID and T5.CARD_LAYOUT_ID = T6.CARD_LAYOUT_ID and decode(T5.FACE_VALUE, '0', T5.FACE_VALUE,'0') = T6.FACE_VALUE
		WHERE 
		     T5.PRODUCT_ID = #productId:VARCHAR#
	</select>
	<select id="selectRequiredAmountCardList"
		resultClass="com.allinfinance.univer.seller.order.dto.SellOrderListDTO"
		parameterClass="com.allinfinance.univer.seller.order.dto.SellBuyOrderDTO">
		SELECT 
		   T5.CARD_LAYOUT_ID AS "cardLayoutId",
	       T5.FACE_VALUE / 100 AS "faceValue",
	       T5.FACE_VALUE_TYPE AS "faceValueType",
	       NVL(T4.SUM_CARDSTOCK,'0') AS "stockAmount",
	       T5.SUM_CARDAMOUNT AS "sumAmount",
	       NVL(T4.SUM_CARDSTOCK,'0') - T5.SUM_CARDAMOUNT AS "requireAmount"
		FROM
	       ( SELECT  T3.CARD_QUANTITY - NVL(REAL_CARD_QUANTITY,'0') SUM_CARDAMOUNT,T3.PRODUCT_ID,T3.CARD_LAYOUT_ID,T3.FACE_VALUE,T3.FACE_VALUE_TYPE
	         FROM TB_SELL_ORDER T3
	         WHERE  T3.ORDER_ID IN ($orderIdArray$))  T5 left join 	         
	       (SELECT COUNT(T1.CARD_NO) AS SUM_CARDSTOCK,T1.PRODUCT_ID, T1.CARD_LAYOUT_ID,T1.FACE_VALUE,T1.FACE_VALUE_TYPE
	          FROM TB_ENTITY_STOCK T1
	          WHERE T1.ENTITY_ID=#defaultEntityId:VARCHAR# AND T1.STOCK_STATE='1'
	          GROUP BY T1.PRODUCT_ID, T1.CARD_LAYOUT_ID, T1.FACE_VALUE,T1.FACE_VALUE_TYPE) T4
	      	  on T5.PRODUCT_ID = T4.PRODUCT_ID and T5.CARD_LAYOUT_ID = T4.CARD_LAYOUT_ID
	          
		WHERE 
		  T4.FACE_VALUE=0
		AND T5.PRODUCT_ID = #productId:VARCHAR#
	</select>
</sqlMap>
